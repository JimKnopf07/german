<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<chapter id="themes" lang="de_DE" status="draft">
  <!-- $Id$-->

  <title>Themes<indexterm>
      <primary>Themes</primary>
    </indexterm></title>

  <para>Themes bestimmen das Aussehen einer PostNuke-Installation. Sie
  bestehen aus einem Verzeichnis und mindestens der
  <filename>theme.php</filename>-Datei. Desweiteren gibt es ein Verzeichnis
  für die verwendeten Bilder und eines für die Style-Sheet-Dateien.
  Darüberhinaus können Themes weitere Dateien enthalten.</para>

  <para>Über das Theme lassen such die Farben, das Layout, Schriftarten usw.
  anpassen.</para>

  <para>Wenn man möchte, kann man dem Anwender auch die Wahl zwischen allen
  installieren Themes lassen. Diese Funktion läßt sich in den Einstellungen
  ein- uns ausschalten.</para>

  <para>Es gibt hunderte von Themes. Über die offizielle Postnuke-Homepage
  aber auch über andere Seiten kannst Du sie finden. Es gibt auch "Themes
  Packs", Zusammenstellungen von dutzenden Themes. Aber Vorsicht! Auch wenn
  sie als ".7x kompatible" ausgezeichnet sind, muß das nicht für alle
  stimmen.</para>

  <para>Themes funktionieren nicht auf jeder Postnuke-Version. Zum Beispiel
  tun einige nur unter .6x ihre Arbeit, während andere nur unter .7x arbeiten.
  Zum Teil funktionieren die Themes auch nur bei Systemen neuer als .71x.
  Damit die Angelegenheit nicht allzu einfach wird, kann man den Themes von
  außen nicht einfach ansehen, für welche Version sie gemacht sind. Dazu muß
  man leider in den Quelltext schauen und wissen, nach was man suchen muss.
  Den Unterschied zwischen .6x und .7x Themes ist leicht zu erkennen
  speziellere Anpassungen für einzelne Versionen lassen sich nicht so einfach
  erkennen. Öffne die theme.php in einem Editor und such die Funktion
  "themearticle".</para>

  <para>PN .6x Themes:</para>

  <programlisting>function themearticle ($aid, $informant, $datetime... ...$topicimage, $topictext)</programlisting>

  <para>PN .7.0.x .71 and .711 Themes:</para>

  <programlisting>function themearticle ($_deprecated, $_deprecated... ...$links, $info, $preformat)</programlisting>

  <para>Es gibt mittlerweile drei verschiedene Arten von Themes:</para>

  <variablelist>
    <varlistentry>
      <term>"traditionelle" Themes<indexterm>
          <primary>Themes</primary>

          <secondary>traditionelle</secondary>
        </indexterm></term>

      <listitem>
        <para>Dieses sind Themes, in denen das Aussehen und die Logik in der
        <filename>theme.php</filename> bestimmt werden. Die meisten Themes
        fallen in diese Kategorie, allerdings ist das Anpassen eines solchen
        Themes relativ aufwändig.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Xanthia<indexterm>
          <primary>Themes</primary>

          <secondary>Xanthia</secondary>
        </indexterm><indexterm>
          <primary>Xanthia</primary>
        </indexterm></term>

      <listitem>
        <para>Xanthia ist die neue offizielle Theme-Engine von PostNuke. Auch
        es werden sogenannte Templates (also Schablonen, das sind im
        wesentliochen HTML-Dateien mit "Platzhaltern" für die Inhalte)
        benutzt, um das Seitenlayout zu definieren.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Autothemes<indexterm>
          <primary>Themes</primary>

          <secondary>Autotheme</secondary>
        </indexterm><indexterm>
          <primary>Autotheme</primary>
        </indexterm></term>

      <listitem>
        <para>AutoTheme ist ein Theme System, das nicht nur für PostNuke,
        sondern auch für MD-Pro, PHP-Nuke, und eNvolution verfügbar ist.
        AutoTheme benutzt zur Definition des Layouts HTML-Dateien, die als
        "Schablonen" eingesetzt werden. AutoTheme gibt es in zwei Varianten:
        "AutoTheme Lite" steht kostenlos zum Download zur Verfügung,
        wohingegen die Vollversion in unterschiedlichen Lizenzierungen als
        kommerzielle Software vertrieben wird.</para>

        <para>AutoTheme stammt von Shawn McKenzie (AbraCadaver), die Homepage
        ist <ulink
        url="http://spidean.mckenzies.net">http://spidean.mckenzies.net</ulink></para>
      </listitem>
    </varlistentry>
  </variablelist>

  <section id="traditionellethemes">
    <title>Traditionelle Themes<indexterm>
        <primary>Themes</primary>

        <secondary>traditionelle</secondary>
      </indexterm></title>

    <para>TBD</para>
  </section>

  <section id="Xanthia.User">
    <title>Xanthia<indexterm>
        <primary>Themes</primary>

        <secondary>Xanthia</secondary>

        <see>Xanthia</see>
      </indexterm><indexterm>
        <primary>Xanthia</primary>
      </indexterm></title>

    <para>Xanthia (<abbrev>XTE<indexterm>
        <primary>XTE</primary>

        <see>Xanthia</see>
      </indexterm></abbrev> = Xanthia Templating Engine) ist das
    Layout-System, das mit PostNuke .750 und .8 offiziell Bestandteil des
    Basis-Pakets ist. Dieses System ermöglicht die Benutzung von Themes, die
    die erweiterten Funktionen von Xanthia nutzen, und es bietet eine größere
    Flexibilität im Themedesign. Das XTE-Paket besteht aus Xanthia und
    pnRender. Xanthia ist für das generelle Layout der Seite zuständig, währen
    pnRender der Teil des Systems ist, der die Xanthia-Funktionen den Modulen
    zur Verfügung stellt. Xanthia basiert auf der Smarty Templating Engine,
    die in der Dokumentation folgendermaßen beschrieben wird:</para>

    <blockquote>
      <attribution><ulink
      url="http://smarty.php.net/manual/de/what.is.smarty.php">Smarty
      Dokumentation</ulink></attribution>

      <para>Smarty<indexterm>
          <primary>Smarty</primary>
        </indexterm> ist eine Template-Engine für PHP. Genauer gesagt erlaubt
      es die einfache Trennung von Applikations-Logik und Design/Ausgabe. Dies
      ist vor allem wünschenswert, wenn der Applikationsentwickler nicht die
      selbe Person ist wie der Designer. Nehmen wir zum Beispiel eine Webseite
      die Zeitungsartikel ausgibt. Der Titel, die Einführung, der Author und
      der Inhalt selbst enthalten keine Informationen darüber wie sie
      dargestellt werden sollen. Also werden sie von der Applikation an Smarty
      übergeben, damit der Designer in den Templates mit einer Kombination von
      HTML- und Template-Tags die Ausgabe (Tabellen, Hintergrundfarben,
      Schriftgrössen, Stylesheets, etc.) gestalten kann. Falls nun die
      Applikation eines Tages angepasst werden muss, ist dies für den Designer
      nicht von Belang, da die Inhalte immer noch genau gleich übergeben
      werden. Genauso kann der Designer die Ausgabe der Daten beliebig
      verändern, ohne dass eine Änderung der Applikation vorgenommen werden
      muss. Somit können der Programmierer die Applikations-Logik und der
      Designer die Ausgabe frei anpassen, ohne sich dabei in die Quere zu
      kommen.</para>

      <para>Was Smarty nicht kann: Smarty versucht nicht die gesamte Logik aus
      dem Template zu verbannen. Solange die verwendete Logik ausschließlich
      für die Ausgabe verwendet wird, kann sie auch im Template eingebettet
      werden. Ein Tip: versuchen Sie Applikations-Logik aus dem Template und
      Präsentations-Logik aus der Applikation herauszuhalten. Nur so bleibt
      die Applikation auf absehbere Zeit gut skalier- und wartbar.</para>
    </blockquote>

    <para>Das System trennt also das Layout von der Applikations-Logik
    (Datenbankabfragen, Funktionen, ...), das bedeutet, dass jedes Theme aus
    einer Reihe Templates (Text-Dateien) besteht, die direkt mit jedem
    HTML-Editor zu bearbeiten sind. Eingebettet in das HTML sind Tags, die
    später die Inhalte einfügen oder einfache Template-Logik. Die Tags sind so
    formatiert, dass sie als HTML-Kommentare von den Editoren erkannt werden.
    Diese überzeugenden Argumente für eine zentrale Templating Engine haben
    das Postnuke Entwicklerteam davon überzeugt, ein solches System in den
    Postnuke-Kern zu integrieren. Als Vorlage für die
    Postnuke-Smarty-Implementierung diente das pnRender-System von <ulink
    url="http://www.envolution.com/">Envolution</ulink><indexterm>
        <primary>Envolution</primary>
      </indexterm>. Inzwischen wurde der Quelltext aber komplett überarbeitet
    und neu geschrieben. pnRender ist eine Unterklasse (Subclass) von Smarty,
    so dass Smarty-Kenner pnRender so benutzen können wie Smarty.</para>

    <section id="Xanthia.User.Terms">
      <title>Terminologie</title>

      <para>An dieser Stelle folgen einige Definitionen wichtiger Begriffe im
      Zusammenhang mit Xanthia.</para>

      <variablelist>
        <varlistentry>
          <term>Templates<indexterm>
              <primary>Xanthia</primary>

              <secondary>Templates</secondary>
            </indexterm><indexterm>
              <primary>Templates</primary>

              <see>Xanthia</see>
            </indexterm></term>

          <listitem>
            <para><glossterm>Templates</glossterm> sind die Dateien, die die
            Layoutelemente eines Themes / Moduls enthalten. Jedes Theme ist in
            mehrere Templates aufgeteilt, die zusammen mit dem Inhalt die
            fertige Seite ergeben. Templates bestehen aus normalem HTML in das
            Smarty-Tags eingebettet werden. Diese eingebetteten Tags werden
            dann durch dynamische Inhalte ersetzt. Dazu können auch einfache
            Logik-Elemente wie Schleifen und Bedingungen benutzt werden</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><glossterm>Themezonen<indexterm>
              <primary>Xanthia</primary>

              <secondary>Themezonen</secondary>
            </indexterm><indexterm>
              <primary>Themezone</primary>

              <see>Xanthia</see>
            </indexterm></glossterm></term>

          <listitem>
            <para><glossterm>Themezonen</glossterm> werden eingesetzt, um
            verschiedenen Blöcken oder Modulen ein bestimmtes aussehen zu
            geben. Jeder Themezone ist ein Template zugeordnet, die Themezone
            wiederum einem Block oder einem Modul.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Blockzonen<indexterm>
              <primary>Xanthia</primary>

              <secondary>Blockzonen</secondary>
            </indexterm><indexterm>
              <primary>Blockzone</primary>

              <see>Xanthia</see>
            </indexterm></term>

          <listitem>
            <para><glossterm>Blockzonen</glossterm> definieren die Bereiche,
            denen Blöcke zugeordnet werden können. Blockzonen können dort im
            Theme positioniert werden, wo Blöcke angezeigt werden sollen. Dazu
            müssen die entsprechenden Tags in das Theme eingebaut
            werden.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section id="Xanthia.User.Config">
      <title>Konfiguration<indexterm>
          <primary>Xanthia</primary>

          <secondary>Konfiguration</secondary>
        </indexterm></title>

      <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata align="right" fileref="Xanthia.AdminMenu.jpg"
                       format="JPG" />
          </imageobject>

          <textobject>
            <phrase>Der Xanthia Konfigurations Bildschirm</phrase>
          </textobject>
        </mediaobject>
      </screenshot>

      <para>Die verschiedenen Optionen von Xanthia lassen sich über die
      Checkboxen ein- und ausschalten:</para>

      <variablelist>
        <varlistentry>
          <term>Visual Block Editor benutzen<indexterm>
              <primary>Xanthia</primary>

              <secondary>Visual Block Editor</secondary>
            </indexterm><indexterm>
              <primary>Visual Block Editor</primary>

              <see>Xanthia</see>
            </indexterm><indexterm>
              <primary>VBE</primary>

              <see>Xanthia</see>
            </indexterm><indexterm>
              <primary>Blöcke</primary>

              <secondary>Visual Block Editor</secondary>

              <see>Xanthia</see>
            </indexterm></term>

          <listitem>
            <para>Damit läßt sich der visuelle Block-Editor aktiveren. Mit
            diesem Tool hat der Admin die volle Kontrolle über die Blocks und
            kann sie beim Surfen durch die Site aktiveren/deaktivieren und
            verschieben. Dazu müssen die Blöcke in der normalen
            Blockverwaltung einfach eingeschaltet sein. Die Steuerung läuft
            dann über JavaSkript-Popups ab.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Short URLs aktivieren<indexterm>
              <primary>Xanthia</primary>

              <secondary>Kurze URLs</secondary>
            </indexterm><indexterm>
              <primary>URLs</primary>

              <secondary>kurze</secondary>

              <see>Xanthia</see>
            </indexterm><indexterm>
              <primary>kurze URLs</primary>

              <see>Xanthia</see>
            </indexterm><indexterm>
              <primary>short URLs</primary>

              <see>Xanthia</see>
            </indexterm></term>

          <listitem>
            <para>Mit der XTE haben endlich die Kurzen URLs ihren Weg in den
            Postnuke Core gefunden. Über diese Einstellung lassen sie sich
            aktivieren. Dazu muß allerdings noch eine htaccess-Datei aus dem
            Verzeichnis modules\Xanthia\pndocs\short_urls ins Hauptverzeichnis
            der Site kopiert werden.</para>

            <tip>
              <para>Die Inhalte bezüglich short URLs sind nur dann sichtbar
              wenn eine <filename>.htaccess</filename>-Datei im PostNuke root
              directory liegt und der WebServer Rewriting-URLs verarbeiten
              kann.</para>
            </tip>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Erweiterung für short URLs (ohne .)</term>

          <listitem>
            <para>Die Dateiendung, die die Kurzen URLs benutzen sollen muß
            hier - ohne . - angegeben werden. Es stehen 3 Lösungen für die
            Dateiendungen zur Verfügung: htm, html, phtml - je nachdem, welche
            htaccess benutzt wird.Während der Installation darf unter
            Administration/Einstellungen kein Xanthia-Theme als Site-Theme
            eingestellt sein.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Caching nutzen<indexterm>
              <primary>Xanthia</primary>

              <secondary>Caching</secondary>
            </indexterm><indexterm>
              <primary>Caching</primary>

              <secondary>Xanthia</secondary>

              <see>Xanthia</see>
            </indexterm></term>

          <listitem>
            <para>Aktiviert das Caching von Xanthia-Seiten. Caching erhöht die
            Performance der Site ungemein, weil die Inhalte der gechachten
            Seiten nicht mehr aus der Datenbank bezogen, sondern aus dem
            Filesystem gelesen werden.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Module die vom caching ausgenommen sind</term>

          <listitem>
            <para>Hier sind die Module zu erfassen die explizit nicht gecacht
            werden sollen (durch Komma getrennt.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>auf aktualisierte Templates prüfen</term>

          <listitem>
            <para>Aktiviert, raubt diese Option etwas Performance, wenn aber
            das Caching eingeschaltet ist, würden Änderungen an den Templates
            nicht übernommen. Wenn aber keine Änderungen an den Templates mehr
            anstehen, sollte sie ausgeschaltet werden.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>erneutes Kompilieren derTemplates erzwingen</term>

          <listitem>
            <para>Durch diese Funktion würden Templates in jedem Fall neu
            kompiliert - das Caching wäre effektlos.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Dauer für das Caching</term>

          <listitem>
            <para>Wie viele Sekunden sollen die Seiten gecacht werden?</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Templates in die Datenbank schreiben</term>

          <listitem>
            <para>Option, um das Template in der PostNuke Datenbank zu
            speichern.</para>

            <para>Wenn man sich dafür entscheidet die Templates nicht in der
            Datenbank zu speichern verliert man zwar die Möglichkeit das
            Template laufend "Online" zu editieren, aber auf der anderen Seite
            reduziert man die Datenbankzugriffe während der Seitenkomilierung.
            Wir empfehlen während der Theme-Entwicklung Templates in der
            Datenbank zu speichern.</para>

            <note>
              <para>Beim ersten Zugriff auf eine Seite erfolgen
              Datenbankzugriffe auf die gepeicherten Templates. Danach erfolgt
              kein Zugriff oder Abgleich mehr, sondern es werden die
              kompilierten Templates genutzt. Jedesmal wenn ein Template
              verändert oder eine Template neu geladen oder durch das
              Online-Editing modifiziert wird, dann wird die "alte" Version
              des Kompilierten Templates gelöscht. Dies ist der einzige
              Zeitpunkt wo Smarty erneut auf die Datenbank zugreift um die
              unkompilierte Version des Templates neu zu laden. Xanthia ist
              ansonsten so programmiert das es Smarty einen "Zeitstempel"
              (timestamp) zurückliefert, so daß Smarty das Template als nicht
              geändert ansieht.</para>
            </note>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>trimwhitespace Ausgabefilter<indexterm>
              <primary>Xanthia</primary>

              <secondary>trimwhitespace</secondary>
            </indexterm><indexterm>
              <primary>trimwhitespace</primary>

              <see>Xanthia</see>
            </indexterm></term>

          <listitem>
            <para>Durch diese Option werden alle überflüssigen Leerzeichen aus
            dem HTML-SourceCode gefiltert, bevor Inhalte an den Browser
            gegeben werden. Dadurch sinkt die Performance leicht, es müssen
            aber weniger Daten an den Client geliefert werden.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section id="Xanthia.User.ConfigThemes">
      <title>Installation und Konfiguration von Xanthia Themes</title>

      <bridgehead id="Xanthia.User.ConfigThemes.Adding">Themes
      installieren</bridgehead>

      <caution>
        <para>Wenn ein Xanthia Theme installiert werden soll, stelle bitte
        vorher ein Nicht-Xanthia-Theme als Standard Theme ein. Dieses kann
        sowohl ein mitgeliefertes als auch ein anderes funktionierendes Theme
        sein.</para>
      </caution>

      <para>Xanthia Theme-Templates sind immer in einem Verzeichnis mit dem
      Namen des Themes gesammelt. Dieses Verzeichnis wird dann in das
      Verzeichnis /themes kopiert. Ruft man nun die Xanthia Theme
      Administration (<guimenuitem>Themes anzeigen</guimenuitem>) auf, so
      erscheint eine Tabelle mit allen verfügbaren Xanthia-Themes. "Normale"
      Themes werden hier nicht aufgeführt.</para>

      <para>Mit "<guimenuitem>Theme hinzufügen</guimenuitem>" kann das neue
      Theme hinzugefügt werden. Das Theme wird nun als aktiv angezeigt und
      kann in den Site-Einstellungen als Theme ausgewählt werden.</para>

      <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata fileref="Xanthia.ViewThemes.jpg" format="JPG" />
          </imageobject>

          <textobject>
            <phrase>Der "<guimenuitem>Themes anzeigen</guimenuitem>"
            Bildschirm in Xanthia</phrase>
          </textobject>
        </mediaobject>
      </screenshot>

      <bridgehead id="Xanthia.User.ConfigThemes.Editing">Bearbeiten von
      Themes</bridgehead>

      <indexterm>
        <primary>Xanthia</primary>

        <secondary>Themes bearbeiten</secondary>
      </indexterm>

      <para>Nachdem ein neues Theme hinzugefügt wurde, kann es bearbeitet
      werden, indem man "<guimenuitem>Theme editieren</guimenuitem>" in der
      Theme-Übersicht auswählt. Es steht nun verschiedene Funktionen zur
      Verfügung: <guimenuitem>Block Zones</guimenuitem>, <guimenuitem>Theme
      Zones</guimenuitem>, <guimenuitem>Theme Templates,</guimenuitem>
      T<guimenuitem>heme Farben</guimenuitem>, <guimenuitem>Theme
      Einstellungen</guimenuitem>, und <guimenuitem>Block
      Kontrolle</guimenuitem>.</para>

      <bridgehead id="Xanthia.User.BlockZones">Block-Zonen</bridgehead>

      <indexterm>
        <primary>Xanthia</primary>

        <secondary>Blockzonen</secondary>
      </indexterm>

      <para>Block Zonen definieren die Bereiche in einem Theme, in dem Blöcke
      angezeigt werden sollen. Unter diesem Menüpunkt kann man ersehen, welche
      Block-Zonen zur Verfügung stehen und wie sie heißen. Dieses Menü wird
      sehr wenig gebraucht werden. Nur wenn komplette Block-Zonen ein- und
      ausgeschaltet werden sollen, muß man das hier tun. Um eine Block-Zone
      hinzuzufügen müssen zwei Schritte eingehalten werden:</para>

      <orderedlist>
        <listitem>
          <para>Block-Zone hinzufügen. Um dies zu tun, muß man am unteren Ende
          der Übersicht das Tag und den Namen der Zone definieren. Zum
          Beispiel: "Tutorial Test Block" und TUTORIAL. Diese Block-Zone kann
          dann in den Templates positioniert werden. Blöcke, die dieser Zone
          zugeordnet werden, werden dann dort angezeigt.</para>
        </listitem>

        <listitem>
          <para>Im Theme muß - wie gesagt - an der richtigen Stelle das Tag
          zum Aufrufen der Zone eingefügt werden. In diesem Fall wäre das das
          Tag Code: &lt;!--[$TUTORIAL]--&gt;</para>
        </listitem>
      </orderedlist>

      <para>Auf umgekehrte Art können Block-Zonen jederzeit auch wieder aus
      dem Theme entfernt werden. Die Themes aus dem Xanthia-Paket oder dem
      Postnuke .8 Paket enthalten eine Reihe vorkonfigurierter
      Block-Zonen.</para>

      <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata fileref="Xanthia.BlockZones.jpg" format="JPG" />
          </imageobject>

          <textobject>
            <phrase>Xanthias <guimenuitem>Block
            Zonen</guimenuitem>-Bildschirm</phrase>
          </textobject>

          <caption>
            <para>Xanthias <guimenuitem>Block
            Zonen</guimenuitem>-Bildschirm</para>
          </caption>
        </mediaobject>
      </screenshot>

      <bridgehead id="Xanthia.User.ThemeZones">Theme-Zonen</bridgehead>

      <indexterm>
        <primary>Xanthia</primary>

        <secondary>Themezonen</secondary>
      </indexterm>

      <para><glossterm>Theme-Zonen</glossterm> stellen die einzelnen Bereiche
      eines Themes dar, aus denen es zusammengesetzt ist. Jeder einzelnen Zone
      ist ein eigenes <glossterm>Template</glossterm> (Vorlage) zugeordnet,
      das für die Darstellung dieser Zone verwendet wird.</para>

      <para>Einige <glossterm>Theme-Zonen</glossterm> sind notwendig und
      können entsprechend nicht entfernt werden. Andere, zusätzliche und
      optionale <glossterm>Theme-Zonen</glossterm> (<glossterm>Addon Theme
      Zones</glossterm>) können hingegen jederzeit deaktiviert und gelöscht
      werden. Mittels der Auswahl <guimenu>configure</guimenu> können den
      einzelnen Zonen <glossterm>Templates</glossterm> zugewiesen
      werden.</para>

      <para>Natürlich können auch neue Theme-Zonen erstellt werden. Auf diesem
      Weg kann man unterschiedlichen Modulen ein eigenständiges Aussehen
      zuweisen.</para>

      <para>Um eine Theme-Zone zu erstellen, muss zunächst ein Template
      erstellt werden, das im <glossterm>pnTemplates</glossterm>-Verzeichnis
      des Themes abgelegt wird. Sodann ist der Link <guimenu>neue Zone
      hinzufügen</guimenu> am oberen Rand des Theme-Zonen Menüs zu wählen.
      Dadurch erhält man ein Formular, in dem folgende Felder ausgefüllt
      werden müssen:<variablelist>
          <varlistentry>
            <term>Zone Name</term>

            <listitem>
              <para>Hier wird der Name für die Theme-Zone angegeben. Er kann
              z.B. als Kurzbeschreibung der Zone dienen. Jede Zone sollte
              einen eindeutigen, d.h. nicht mehrfach verwendeten Namen
              bekommen.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Zone Label</term>

            <listitem>
              <para>Die Zonenbeschreibung (<glossterm>Zone Label</glossterm>)
              wird auf Grundlage der Auswahl in der drop down-Liste
              automatisch erstellt. Die vorgegebene Zuweisung sollte nicht
              verändert werden.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>neues Master for module</term>

            <listitem>
              <para>Beim Erstellen der Vorlage für ein Modul
              (<glossterm>module template</glossterm>) ist zunächst das Modul
              zu bestimmen, dem die Vorlage zugewiesen werden soll.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Neuer Skin for block</term>

            <listitem>
              <para>Unter diesem Auswahlpunkt wird ein Block bestimmt, dem
              eine neue Block-Vorlage (<glossterm>block template</glossterm>)
              zugeordnet wird.</para>
            </listitem>
          </varlistentry>
        </variablelist></para>

      <para>Nachdem die vorgegebenen Felder ausgefüllt wurden, ist die
      Erstellung der Vorlage mit <guimenuitem>bestätigen</guimenuitem>
      abzuschicken. Danach ist die neue Vorlage für das Theme
      verfügbar.</para>

      <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata fileref="Xanthia.ThemeZones.jpg" format="JPG" />
          </imageobject>

          <textobject>
            <phrase>Xanthias <guimenuitem>Theme Zonen</guimenuitem>
            Bildschirm</phrase>
          </textobject>

          <caption>
            <para>Xanthias <guimenuitem>Theme Zonen</guimenuitem>
            Bildschirm</para>
          </caption>
        </mediaobject>
      </screenshot>

      <bridgehead
      id="Xanthia.ThemeEditing.ThemeTemplates">Theme-Templates</bridgehead>

      <indexterm>
        <primary>Xanthia</primary>

        <secondary>Theme-Templates</secondary>
      </indexterm>

      <para>In diesem Menü werden die Themen-, Modul- und Block-Templates
      angezeigt, die bereits festgelegt worden sind. Mittels des
      <guimenu>EDITIEREN</guimenu>-Links, der ein Bearbeitungsfenster öffnet,
      kann ein Template bearbeitet werden</para>

      <caution>
        <para>Immer wenn die Templates neugeladen werden (reload templates),
        gehen alle vorgenommenen Veränderungen verloren. <remark>In
        zukünftigen Versionen von Xanthia wird es die Möglichkeit geben, die
        Zeitstempel der Dateien auf dem Server mit denen der Templates in der
        Datenbank zu vergleichen. Zeigt der Vergleich, dass die Version einer
        Vorlage im Dateisystem aktueller ist als die in der Datenbank, wird es
        dem Benutzer möglich sein, die in der Datenbank gespeicherte Version
        zu aktualisieren. Ergibt der Vergleich, dass die Datenbank-Version der
        Vorlage hingegen neuer ist, kann diese zwar immer noch überschrieben
        werden, jedoch erhält man zusätzlich die Möglichkeit, die Vorlage aus
        der Datenbank auf seinem eigenen, lokalen Rechner zu sichern.
        </remark></para>
      </caution>

      <para>Die meisten Templates funktionieren nur, wenn sie einer bestimmten
      Zone zugeordnet werden, sind also nicht austauschbar. Eine Block-Zone
      ist zum Beispiel nicht sehr gut geeignet, um als Vorlage für einen
      News-Artikel verwendet zu werden. Andersherum ist dies natürlich
      genauso.</para>

      <para>Alle Themes benötigen ein Template für die linke Seitenbox (Left
      Sidebox/left blocks), ein Template für die Master-Zone, ein Template für
      News-Artikel und ein Template für den OpenTable.</para>

      <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata fileref="Xanthia.ThemeTemplates.jpg" format="JPG" />
          </imageobject>

          <textobject>
            <phrase>Xanthias <guimenuitem>Theme Templates</guimenuitem>
            Bildschirm</phrase>
          </textobject>

          <caption>
            <para>Xanthias <guimenuitem>Theme Templates</guimenuitem>
            Bildschirm</para>
          </caption>
        </mediaobject>
      </screenshot>

      <bridgehead id="Xanthia.User.ThemeColors">Theme-Farben</bridgehead>

      <indexterm>
        <primary>Xanthia</primary>

        <secondary>Theme-Farben</secondary>
      </indexterm>

      <para>Die Farben eines Xanthia-Themes werden durch die <emphasis>colour
      palette</emphasis> (Farbpalette) in der <glossterm>Theme
      Colours</glossterm>-Auswahl des Administrationsmenüs von Xanthia
      bestimmt. Mit Hilfe der Paletten ist es dem Designer eines Themes
      möglich, einem Theme verschiedene Farb-Sets zuzuordnen.</para>

      <para>Damit mehrere Farbpaletten zugleich verwendet werden können,
      müssen die <glossterm>dynamic stylesheets</glossterm> aktiviert sein.
      Von den Standard-Themes, die im Grundpaket von Xanthia enthalten sind,
      unterstützt allein pnDefault die dynamic stylesheets.</para>

      <para>Ein Farbschema wird durch den Link <guimenuitem>Use
      Palette</guimenuitem> aktiviert.</para>

      <para>Die Farben einer Palette werden durch den
      <guimenuitem>konfigurieren</guimenuitem>-Link verändert. Dieser Link
      ruft einen visuellen Editor auf. Dieser funktioniert wie folgt: Der
      Farbbereich des Themes, der verändert werden soll, wird mit den
      Auswahlknöpfen am oberen Rand des Editors (color1, color2) festgelegt.
      Ist dies geschehen, kann die neue Farbe mit der Maus in der Farbpalette
      ausgewählt werden.</para>

      <para>Durch ein Eingabe-Feld am unteren Bildschirmrand kann die Palette
      umbenannt werden.</para>

      <para>Ist die Auswahl der Farben abgeschlossen, werden die neuen
      Einstellungen durch den ebenfalls am unteren Bildschirmrand zu findenden
      Link <guimenuitem>Submit these colors</guimenuitem> gespeichert.</para>

      <para>Es ist möglich, eigene Farbpaletten für Themes zu erstellen. Durch
      den Link <guimenuitem>Neue Theme Farbpalette hinzufügen</guimenuitem>
      wird der bereits bekannte visuelle Editor aufgerufen - allerdings mit
      dem Unterschied, dass beim Erstellen einer neuen Palette zunächst keine
      Farbzuweisungen vorhanden sind.</para>

      <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata fileref="Xanthia.ThemeColors.jpg" format="JPG" />
          </imageobject>

          <textobject>
            <phrase>Xanthias <guimenuitem>Theme Farben</guimenuitem>
            Bildschirm</phrase>
          </textobject>

          <caption>
            <para>Xanthias <guimenuitem>Theme Farben</guimenuitem>
            Bildschirm</para>
          </caption>
        </mediaobject>
      </screenshot>

      <bridgehead
      id="Xanthia.User.ThemeSettings">Theme-Einstellungen</bridgehead>

      <indexterm>
        <primary>Xanthia</primary>

        <secondary>Theme-Einstellungen</secondary>
      </indexterm>

      <para><emphasis>Theme-Variablen</emphasis> (Allgemeine Einstellungen)
      sind an ein Theme gebundene Konfigurationsmöglichkeiten. Sie werden von
      der Theme-Engine gespeichert und können vom Administrator der Seite über
      das Administrationsmenü von Xanthia aktualisiert werden.</para>

      <para>Die Einsatzmöglichkeiten dieser Variablen sind vielschichtig und
      variieren von Theme zu Theme. Beispiele dieser Variablen sind die
      Seitenbreite, Parameter für die linken und rechten Blöcke, Schriftgrößen
      und weitere, die vom gewählten Theme abhängig sind. Bestimmte
      Einstelloptionen, wie etwa die top links und bottom links, werden durch
      die Werte 0 und 1 ein-, bzw. ausgeschaltet.</para>

      <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata fileref="Xanthia.ThemeSettings.jpg" format="JPG" />
          </imageobject>

          <textobject>
            <phrase>Xanthias <guimenuitem>Theme Einstellungen
            </guimenuitem>Bildschirm</phrase>
          </textobject>

          <caption>
            <para>Xanthias <guimenuitem>Theme Einstellungen
            </guimenuitem>Bildschirm</para>
          </caption>
        </mediaobject>
      </screenshot>

      <bridgehead id="Xanthia.User.BlockControl">Block-Kontrolle</bridgehead>

      <indexterm>
        <primary>Xanthia</primary>

        <secondary>Block-Kontrolle</secondary>
      </indexterm>

      <para>Xanthia ermöglicht es, Blöcke in Abhängigkeit von Modulen
      darzustellen. Jedem Modul können somit verschiedene Blöcke zugewiesen
      werden (und einzelne Blöcke können je nach Modul an- bzw. abgeschaltet
      werden). Dies ermöglicht einen unglaublichen Gestaltungsspielraum des
      Erscheinungsbildes der Blöcke auf der Seite. Im Block Control
      Administrationsmenü können die im Theme verfügbaren Block-Zonen
      festgelegt werden,</para>

      <para>Um die Block Control zu verwenden, muss zunächst im Menü
      <menuchoice>
          <guimenu>Administration</guimenu>

          <guimenuitem>Blocks</guimenuitem>
        </menuchoice> der Block erstellt werden, der hinzugefügt werden
      soll.</para>

      <note>
        <para>Die Positionsangaben in der Block Administration beeinflussen
        ein Xanthia Theme lediglich dadurch, dass sie die Ausgangsposition
        eines Blocks bei der Installation eines neuen Themes definieren.
        Danach übernimmt die Theme Engine die Kontrolle über die Platzierung
        der Blöcke.</para>

        <para><remark>Diese Werte sind für spätere Integrationen hier
        erforderlich, um effektiv die Block-Position zu repräsentieren. Aber
        das ist derzeit noch nicht möglich ohne die Modularität des
        Theme-Systems aufzugeben</remark></para>
      </note>

      <para>Um einen Block zu einem Modul hinzuzufügen, müssen das Modul, dem
      der Block zugeordnet werden soll und der zuzuordnende Block aus den
      beiden Listenfeldern ausgewählt werden. Durch den Link
      <guimenuitem>Add</guimenuitem> wird der Block dann zugewiesen. Es ist
      möglich, einem Modul gleichzeitig mehrere Blöcke zuzuordnen. Natürlich
      kann man Blöcke auch jederzeit wieder entfernen. Dazu dient der Link
      <guimenuitem>entfernen</guimenuitem> in der Reihe des Blocks, der
      gelöscht werden soll. Die Zuordnung des Blocks zu den restlichen Modulen
      ist davon nicht betroffen, das Entfernen eines Blocks gilt also jeweils
      nur für das ausgewählte Modul.</para>

      <para>Nachdem ein Block einem Modul zugeordnet wurde, kann man
      bestimmen, welche der möglichen <emphasis>block positions</emphasis> der
      Block einnehmen soll. Diese Auswahl wird über die drop down-Box in der
      <guimenuitem>Position</guimenuitem>-Spalte festgelegt. Die
      Auswahlmöglichkeiten in dieser Box entsprechen den Block-Zonen, die im
      Administrationsmenü Block-Zonen bestimmt wurden. Die vertikale Anordnung
      der Blöcke kann dabei über die Pfeilsymbole (hoch/runter) in der Liste
      festgelegt werden.</para>

      <para>Die alphabetische Liste dient der einfacheren Navigation. Durch
      Anklicken eines Buchstabens werden nur die Module angezeigt, deren Namen
      mit dem ausgewählten Buchstaben beginnen. Der Link mit dem Sternchen
      ruft eine Liste aller Module ab.</para>

      <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata fileref="Xanthia.BlockControl.jpg" format="JPG" />
          </imageobject>

          <textobject>
            <phrase>Xanthia's <guimenuitem>Block Control</guimenuitem>
            Bildschirm</phrase>
          </textobject>

          <caption>
            <para>Xanthia's <guimenuitem>Block Control</guimenuitem>
            Bildschirm</para>
          </caption>
        </mediaobject>
      </screenshot>
    </section>

    <section id="Xanthia.User.CommonTasks">
      <title>Allgemeine Aufgaben für Xanthia Themen</title>

      <warning>
        <para>Ein Theme, das man entwickelt, sollte niemals im aktivierten
        Zustand bearbeitet werden! Um die Veränderungen nachzuvollziehen,
        sollte auf die Option <guimenuitem>Theme anzeigen</guimenuitem>
        (<command>index.php?theme=<replaceable>yourtheme</replaceable></command>)
        zurückgegriffen werden.</para>
      </warning>

      <bridgehead id="Xanthia.User.ModuleTemplates">Benutzerdefinierte
      Modul-Templates</bridgehead>

      <indexterm>
        <primary>Xanthia</primary>

        <secondary>Modul-Templates</secondary>
      </indexterm>

      <indexterm>
        <primary>Modul-Templates</primary>

        <see>Xanthia</see>
      </indexterm>

      <para>Xanthia ermöglicht es der Seite unterschiedliche, modulbasierte
      Templates zuzuweisen. In Abhängigkeit vom aktiven Modul, kann die Seite
      somit ein verschiedenes Design erhalten. Einem Modul kann allerdings
      jeweils nur ein Template zugeordnet werden.</para>

      <para>Im Folgenden werden die Schritte erklärt, um modulspezifische
      Templates zu erstellen. Alle wichtigen Menüs befinden sich unter
      <menuchoice>
          <guimenu>Administration</guimenu>

          <guisubmenu>Xanthia</guisubmenu>

          <guisubmenu>Themes anzeigen</guisubmenu>

          <guimenuitem>Theme editieren</guimenuitem>
        </menuchoice>.</para>

      <procedure>
        <step>
          <title>Ein neues Template für ein Modul erstellen.</title>

          <para>Wähle <menuchoice>
              <guimenu>Theme Templates</guimenu>

              <guimenuitem>Neues Modul Template</guimenuitem>
            </menuchoice> aus und erstelle ein neues Template für das Modul
          (siehe auch <xref linkend="Xanthia.ThemeEditing.ThemeTemplates" />).
          Obwohl der Name für das Template frei bestimmt werden kann,
          empfiehlt es sich, den Namen des Moduls zu verwenden, dem das
          Template zugeordnet wird. Als Grundlage für die Erstellung eines
          neuen Templates bietet sich die master.htm des Themes an. Den
          html-code dieser Datei kann man in das Text-Feld kopieren, das den
          html-code für das neue Template in der Datenbank ablegt.</para>
        </step>

        <step>
          <title>Eine neue Theme Zone hinzufügen</title>

          <para>Wähle <menuchoice>
              <guimenu>Theme Zonen</guimenu>

              <guimenuitem>Neue Zone hinzufügen</guimenuitem>
            </menuchoice> aus und fülle die vorgegebenen Felder (gemäß den
          Beschreibungen) aus ...</para>

          <variablelist>
            <varlistentry>
              <term>Zone Name</term>

              <listitem>
                <para>Hier kann ein Name eigener Wahl (der nicht bereits für
                ein andere Zone verwendet wurde) vergeben werden.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>Zone Label</term>

              <listitem>
                <para>Dies wird durch die nächste Option bestimmt.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>Neues Master für Modul</term>

              <listitem>
                <para>Hier ist das Modul auszuwählen, dem ein neues Template
                zugeordnet werden soll</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>Neuer Skin für Block</term>

              <listitem>
                <para>Hier sollte nichts verändert werden..</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </step>

        <step>
          <title>Zone konfigurieren</title>

          <para>Wen die Seite nach der Eingabe der Änderungen neu aufgebaut
          wird, ist die soeben erstellte Zone zunächst inaktiv und ihr ist
          kein Template zugewiesen. <emphasis role="bold">Zunächst</emphasis>
          muss die Zone konfiguriert werden, bevor sie im nächsten Schritt
          aktiviert werden kann.</para>

          <para>Wähle <guimenuitem>konfigurieren</guimenuitem>. Man erhält
          eine drop down-Liste mit Modul Templates (sollten in der Liste auch
          Block Templates erscheinen bedeutet dies, dass im vorherigen Menu
          "Neuer Skin für Block" entgegen der Beschreibung verändert wurde).
          Wähle nun aus der Liste das Template aus, das dem Modul zugeordnet
          werden soll und bestätige die Änderungen.</para>
        </step>

        <step>
          <title>Die Zone aktivieren</title>

          <para>Nachdem die vorherigen Eingaben bestätigt wurden und die Seite
          neu geladen wurde, sind der zuvor erstellten Zone die ausgewählten
          Templates zugewiesen. Nun muss die Zone lediglich noch
          <guimenuitem>aktiviert</guimenuitem> werden.</para>
        </step>

        <step>
          <title>Die Veränderungen testen</title>

          <para>Rufe nun das Modul auf, dem das soeben erstellte Template
          zugewiesen wurde. Die Seite sollte nun das neue Design für das Modul
          verwenden.</para>
        </step>
      </procedure>

      <bridgehead
      id="Xanthia.User.CommonTasks.BlockTemplates">Benutzerdefinierte
      Block-Templates</bridgehead>

      <indexterm>
        <primary>Xanthia</primary>

        <secondary>Block-Templates</secondary>
      </indexterm>

      <indexterm>
        <primary>Block-Templates</primary>

        <see>Xanthia</see>
      </indexterm>

      <para>Neben der Möglichkeit mit Hilfe von Xanthia Modul-Templates zu
      erstellen, kann man auch jedem einzelnen Block ein eigenes Template
      zuweisen. Dabei können soviele Block Templates erstellen, wie man mag.
      Jedem Block kann ferner in Abhängigkeit vom gewählten Modul ein
      unterschiedliches Template zugewiesen werden..</para>

      <para>Folgende Schritte erläutern, wie man mit Xanthia Templates für
      Blöcke erstellt. Auch hier befinden sich alle relevanten Menüs unter
      <menuchoice>
          <guimenu>Administration</guimenu>

          <guisubmenu>Xanthia</guisubmenu>

          <guisubmenu>Themes anzeigen</guisubmenu>

          <guimenuitem>Theme editieren</guimenuitem>
        </menuchoice>.</para>

      <procedure>
        <step>
          <title>Ein neues Template für den Block erstellen.</title>

          <para>Wähle <menuchoice>
              <guimenu>Theme Templates</guimenu>

              <guimenuitem>Neues Block Template</guimenuitem>
            </menuchoice> an und erstelle ein neues Template für den Block
          (siehe <xref linkend="Xanthia.ThemeEditing.ThemeTemplates" />).
          Obwohl der Name frei vergeben werden kann, empfiehlt es sich den
          Namen des Blocks zu verwenden, für den man das Template erstellt.
          Als Ausgangsbasis kann man den html-code der Dateien rsblock.htm
          oder lsblock.htm in das Text-Feld kopieren.</para>
        </step>

        <step>
          <title>Eine neue Theme Zone hinzufügen</title>

          <para>Wähle <menuchoice>
              <guimenu>Theme Zones</guimenu>

              <guimenuitem>Add New Zone</guimenuitem>
            </menuchoice> aus und fülle die Felder gemäß der Beschreibung
          aus.</para>

          <variablelist>
            <varlistentry>
              <term>Zone Name</term>

              <listitem>
                <para>Ein Name eigener Wahl.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>Zone Label</term>

              <listitem>
                <para>Wird durch die nächste Option automatisch
                festgelegt.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>Neuer Master für Modul</term>

              <listitem>
                <para>Sollte nicht verändert werden!</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>Neuer Skin für Block</term>

              <listitem>
                <para>Hier wird der Block ausgewählt, für den man das Template
                erstellt.</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </step>

        <step>
          <title>Zone konfigurieren</title>

          <para>Wen die Seite nach der Eingabe der Änderungen neu aufgebaut
          wird, ist die soeben erstellte Zone zunächst inaktiv und ihr ist
          kein Template zugewiesen. <emphasis role="bold">Zunächst</emphasis>
          muss die Zone konfiguriert werden, bevor sie im nächsten Schritt
          aktiviert werden kann.</para>

          <para>Wähle <guimenuitem>konfigure</guimenuitem>. Man erhält eine
          drop down-Liste mit Block Templates. Wähle das zu verwendende
          Template aus der Liste aus und bestätige die Eingabe.</para>
        </step>

        <step>
          <title>Die Zone aktivieren</title>

          <para>Nachdem die vorherigen Eingaben bestätigt wurden und die Seite
          neu geladen wurde, sind der zuvor erstellten Zone die ausgewählten
          Templates zugewiesen. Nun muss die Zone lediglich noch
          <guimenuitem>aktiviert</guimenuitem> werden.</para>
        </step>

        <step>
          <title>Die Änderungen überprüfen</title>

          <para>Überprüfe nun, ob der Block, dem ein neues Template zugewiesen
          wurde, dieses auch tatsächlich verwendet.</para>
        </step>
      </procedure>

      <para>Um verschiedenen Blöcken in einem Modul eigene Templates
      zuzuweisen, muss man nur die soeben beschriebenen Schritte für jeden
      weiteren Block wiederholen. Die Anzahl der Block-Templates, die man
      erstellt, bleibt einem selbst überlassen. Einer neuen Zone kann
      allerdings immer nur ein Template zugewiesen werden.</para>

      <para>Um einem Block im Zusammenhang mit einem bestimmten Modul ein
      anderes Template zuzuweisen, muss der Visual Block Editor aktiviert
      werden. Rufe dazu folgendes Menü auf: <menuchoice>
          <guimenu>Xanthia</guimenu>

          <guimenuitem>Xanthia konfigurieren</guimenuitem>
        </menuchoice>.</para>

      <para>Wähle nun das Modul aus, bei dem die Veränderung des Designs eines
      Blocks vorgenommen werden soll. Mittels des entsprechenden Icons kann
      das Fenster des Visual Block Editor geöffnet werden. Wähle das Template
      aus der drop down-Liste und bestätige die Auswahl mit
      <guimenuitem>übertragen</guimenuitem>. Dieser Block muss in den
      vorangegangen Schritten natürlich bereits bestimmt worden sein.</para>

      <para>Das Template eines Blocks kann auch über das Menü
      <guimenuitem>Block Control</guimenuitem> verändert werden: <menuchoice>
          <guimenu>Xanthia</guimenu>

          <guisubmenu>Themes anzeigen</guisubmenu>

          <guisubmenu>Theme editieren</guisubmenu>

          <guimenuitem>Block Control</guimenuitem>
        </menuchoice></para>

      <bridgehead>Eine Block-Zone einem Template zuordnen und in der Block
      Control verfügbar machen</bridgehead>

      <procedure>
        <step>
          <title>Block-Zonen Administration auswählen</title>

          <para>Das entscheidende Menü befindet sich hier: <menuchoice>
              <guimenu>Administration</guimenu>

              <guisubmenu>Xanthia</guisubmenu>

              <guisubmenu>Themes anzeigen</guisubmenu>

              <guisubmenu>Theme editieren</guisubmenu>

              <guimenuitem>Block Zones</guimenuitem>
            </menuchoice></para>
        </step>

        <step>
          <title>Eine Block-Zone erstellen</title>

          <para>Fülle hier alle Felder am unteren Rand des Fensters
          aus.</para>

          <variablelist>
            <varlistentry>
              <term>Zonen Beschreibung</term>

              <listitem>
                <para>Hier kann ein beliebiger (eindeutiger) Name verwendet
                werden.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>in Theme zu verwendendes Tag</term>

              <listitem>
                <para>Mit diesem tag kann der Block in das Theme eingebunden
                werden. Hier wird nur der reine Text eingegeben, nicht die
                ganze Variable <markup>&lt;!--[$NAME]--&gt;</markup>.</para>
              </listitem>
            </varlistentry>
          </variablelist>

          <para>Bestätige die Eingaben mit
          <guimenuitem>übertragen</guimenuitem>.</para>
        </step>

        <step>
          <para>In den Templates der Seite kann die neue Block-Zone nun über
          folgendes Tag eingefügt werden: <markup>&lt;!--[$TAGTOUSEINTHEME
          ]--&gt; </markup></para>
        </step>
      </procedure>

      <bridgehead id="Xanthia.User.CommonTasks.ShortURLs">Implementierung der
      Short URLs</bridgehead>

      <indexterm>
        <primary>Xanthia</primary>

        <secondary>kurze URLs</secondary>
      </indexterm>

      <para>Die bisher nur als Addon verfügbare ShortUrls-Erweiterung für
      Postnuke ist in Xanthia integriert. Die ShortURLs benötigen einen
      Webserver mit einer "URL rewriting engine" - für den in der Regel
      verwendeten Apache-Webserver lautet diese mod_rewrite. Für andere
      Webserver sind passende rewrite engines ebenfalls verfügbar.</para>

      <para>Short URLs funktionieren dergestalt, dass die generierten "langen"
      und mit Variablen gebildeten URL's durch eine einfache, "kurze" (short)
      und für Suchmaschinen verfolgbare URL's ersetzt werden. Der Browser
      unterstützt nunmehr diese "kurzen" URL's . Damit ist aber nur die erste
      Hälfte des Jobs getan. Der Webserver setzt diese Short URLs wieder in
      die die notwendigen URLs für die PostNuke-Engine um. Dies erledigt die
      Rewrite Engine. Für den Apache Webserver wird die .htaccess-Datei im
      PostNuke root - Verzeichnis abgelegt. Die .htaccess-Datei enthält ein
      Abbild des Regelwerkes, welches für die Umschreibung (Rewrite) notwendig
      ist.</para>

      <para>Diese Regeln unterstützen viele der der allgemeinen Module, wie
      z.B. My eGallery, pnPHPBB2 etc., genauso wie allgemeine Regeln für alle
      anderen Module. Außerdem werden einige URL-Erweiterungen unterstützt die
      von dem jeweiligen Administrator bevorzugt werden.</para>

      <para>Die Xanthia spezifische Implementierung unterscheidet sich von
      anderen Implementierungen durch die vollständige Nutzung der Smarty
      Templating Architecture. Smarty unterstützte Output filters. Output
      filters arbeiten auf der Basis des durch Templates zum
      Ausführungszeitpunkt generierten Outputs. Dieser Filtertyp ist ideal für
      die Implementierung von Short URLs.</para>

      <para>Zunächst ist festzustellen, ob auf dem Webserver die Rewrite
      Engine verfügbar ist. Wenn eine andere Rewrite Engine als Apaches
      mod_rewrite benutzt wird, dann ist eine Rewrite Engines Script - Datei
      zu schreiben . Nutzt man Apaches mod_rewrite dann ist die <filename>dem
      gewünschten Namenschema folgende .htaccess</filename> - Datei in das
      PostNuke root - Verzeichnis zu kopieren. Diese Dateien findet man in dem
      Verzeichnis <filename>modules/Xanthia/pndocs/short_urls</filename>. Hier
      wird die <filename>.htaccess</filename> - Datei für die gewünschte
      Dateierweiterung ausgewählt und in das PostNuke root - Verzeichnis
      kopiert.</para>

      <para>Nunmehr können über die Administration (<menuchoice>
          <guimenu>Xanthia</guimenu>

          <guimenuitem>Xanthia konfiguriere</guimenuitem>
        </menuchoice><guimenuitem>n</guimenuitem>) die Short URLs konfiguriert
      werden. Die gewünschte Dateierweiterung ist anzugeben die Short URLs zu
      aktivieren.</para>

      <para>Durch <systemitem>http://www.example.com/user.html</systemitem>
      (oder die gewählte Dateierweiterung) kann die Rewrite Engine getestet
      werden. Wenn Sie funktioniert wird man zur user.php
      weitergeleitet.</para>
    </section>

    <section id="Xanthia.User.FAQ">
      <title>FAQ - häufig gestellte Fragen</title>

      <qandaset>
        <qandadiv>
          <title>Fehler</title>

          <qandaentry>
            <question>
              <para>Xanthia has encountered a fatal error in Zone: .... A
              required Zone template was either not found or failed to
              load.</para>
            </question>

            <answer>
              <para>Dieser Fehler zeigt an, daß Xanthia kein passendes
              Template gefunden hat. Kontrolliere, daß sich das Template in
              dem Template Ordner des eingesetzten Themes befindet. Nutze das
              "Swiss Army Knife Tool für PostNuke<indexterm>
                  <primary>PostNuke Swiss Army Knife</primary>
                </indexterm>" (<abbrev>PSAK</abbrev><indexterm>
                  <primary>PSAK</primary>

                  <see>PostNuke Swiss Army Knife</see>
                </indexterm>), das unter <ulink
              url="http://post-nuke.net/Downloads+index-req-viewdownload-cid-1.html">http://www.post-nuke.net</ulink>
              zum Download angeboten wird, um ein funktionierendes Theme
              einzustellen.</para>
            </answer>
          </qandaentry>

          <qandaentry>
            <question>
              <para>Ich finde die Option "<guimenuitem>short
              URLs</guimenuitem>" in der Xanthia Konfiguration nicht!</para>
            </question>

            <answer>
              <para>Diese Option wird in der Konfiguration erst angezeigt,
              sobald du eine passende <filename>.htaccess</filename> auf dem
              Server erstellt hast. (Siehe auch <xref
              linkend="Xanthia.User.CommonTasks.ShortURLs" />). Wenn Xanthia
              initialisiert wird, überprüft es, ob das re-write Modul auf dem
              Server gestartet ist, aber wenn Xanthia einmal initialisert
              wurde, gibt es keine Möglichkeit, diese Überprüfung zu
              wiederholen. Wenn die Überprüfung falsch verlief, mußt du die
              Datenbank direkt (via phpMyAdmin oder etwas Ähnlichem)
              bearbeiten: In der Tabelle
              <filename><replaceable>&lt;prefix&gt;</replaceable>_module_vars</filename>
              befindet sich die Variable pn_modname = Xanthia pn_name
              =shorturlsok. Wenn dieser Wert auf 0 gesetzt ist, setze ihn auf
              1!</para>
            </answer>
          </qandaentry>
        </qandadiv>

        <qandadiv>
          <title>Blöcke und Block-Anordnungen</title>

          <qandaentry>
            <question>
              <para>Ich habe ein Xanthia Theme eingestellt und nun sind alle
              rechten und center Blocks auf jeder Seite zu sehen!</para>
            </question>

            <answer>
              <para>Standardmäßig werden alle Blöcke auf allen Seiten
              angezeigt. Um den center Block zu deaktivieren, gehe zur
              <menuchoice>
                  <guimenu>Administration</guimenu>

                  <guisubmenu>Xanthia</guisubmenu>

                  <guisubmenu>Themes anzeigen</guisubmenu>

                  <guisubmenu>Theme editieren</guisubmenu>

                  <guimenuitem>Block Control</guimenuitem>
                </menuchoice> und lösche die Blöcke aus der Liste des Moduls,
              die du nicht angezeigt bekommen möchtest. Oder gehe zum visual
              block administration in der Xanthia Konfiguration und lösche die
              Blöcke, indem zu jedes Modul aufrufst und diejenigen, die du für
              dieses Modul nicht haben möchtest, deaktivierst.</para>
            </answer>
          </qandaentry>

          <qandaentry>
            <question>
              <para>Ich habe gerade einen neuen Block erstellt, aber dieser
              wird auf keiner Seite angezeigt.</para>
            </question>

            <answer>
              <para>Das ist das selbe Problem wie oben. Gehe zur
              <guimenuitem>Block Control</guimenuitem> oder nutze den Visual
              Block Editor um den Block zu aktivieren.</para>
            </answer>
          </qandaentry>

          <qandaentry>
            <question>
              <para>Wie kann ich einen neuen Block so einstellen, daß er auf
              allen Seiten angezeigt wird?</para>
            </question>

            <answer>
              <para>Im Moment ist das nur möglich, indem man nach Erstellen
              des Blocks, diesen Block für jedes einzelne Modul aktivert. Wenn
              ein Theme initialisiert wird, werden standardmäßig alle Blöcke
              in allen Modulen angezeigt. Danach muß man das für neue Blöcke
              manuell einstellen. Dieses wird aber in zukunftigen Xanthia
              Veröffentlichungen verbessert!</para>
            </answer>
          </qandaentry>

          <qandaentry>
            <question>
              <para>Ich möchte die rechten Blöcke on der News Startseite
              angezeigt bekommen, aber nicht beim Aufruf eines Artikels. Wie
              kann ich das erreichen?</para>
            </question>

            <answer>
              <para>Durch die Architektur des .7x News Moduls wurde ein
              kleiner Hack in die aktuelle Xanthia Veröffentlichung eingefügt
              worden. Unter <menuchoice>
                  <guimenu>Administration</guimenu>

                  <guisubmenu>Xanthia</guisubmenu>

                  <guisubmenu>Themes anzeigen</guisubmenu>

                  <guisubmenu>Theme editieren</guisubmenu>

                  <guimenuitem>Theme Einstellungen</guimenuitem>
                </menuchoice> siehst du eine Option "<guimenuitem>Show right
              blocks in news module (only for .7x)"</guimenuitem>. Diese
              Option schaltet die rechten Blöcke im News - Modul an und
              aus.</para>

              <para>Diese Option ist in den .7x Versionen notwendig, da das
              News Modul hier seinen eigenen rechten Blöcke hat. Diese wird in
              der .8 Veröffentlichung nicht mehr sein!</para>
            </answer>
          </qandaentry>
        </qandadiv>

        <qandadiv>
          <title>Design</title>

          <qandaentry>
            <question>
              <para>Ich möchte, daß die Startseite ein anderes Layout hat, als
              andere Seiten. Wie kann ich das Layout des Moduls ändern, das
              als Start-Modul gesetzt ist?</para>
            </question>

            <answer>
              <para>Das ist hier erklärt: <xref
              linkend="Xanthia.User.ModuleTemplates" /></para>
            </answer>
          </qandaentry>

          <qandaentry>
            <question>
              <para>Ich habe ein Xanthia Theme eingestellt und nun erscheinen
              meine News in zwei Spalten...</para>
            </question>

            <answer>
              <para>Schau unter <menuchoice>
                  <guimenu>Administration</guimenu>

                  <guisubmenu>Xanthia</guisubmenu>

                  <guisubmenu>Themes anzeigen</guisubmenu>

                  <guisubmenu>Theme editieren</guisubmenu>

                  <guimenuitem>Theme Einstellungen</guimenuitem>
                </menuchoice> nach der <guimenuitem>indexcol</guimenuitem>
              theme setting. Diese stellt die Anzahl der Spalten ein.</para>
            </answer>
          </qandaentry>

          <qandaentry>
            <question>
              <para>Ist es möglich, dynanamische Ausgabefilter anzugeben, die
              Xanthia beachtet?</para>
            </question>

            <answer>
              <para>Im Moment gibt es keine Möglichkeit, Filter wie "kopiere
              dies in ein Verzeichnis und aktiviere es im Amin-Menü"
              einzufügen. Das kann man aber in der theme.php einstellen. Wenn
              die engine initialisiert ist, füge folgendes ein:</para>

              <programlisting>$engine-&gt;load_filter('&lt;filtertype&gt;', '&lt;filtername&gt;');</programlisting>
            </answer>
          </qandaentry>
        </qandadiv>

        <qandadiv>
          <title>Kompatibilität</title>

          <qandaentry>
            <question>
              <para>Kann ich ein Envolution Theme für Xanthia nehmen?</para>
            </question>

            <answer>
              <para>Envolution Themes arbeiten nicht mit Xanthia zusammen
              seitdem ein Großteil des Codes bearbeitet wurde, um weitere
              Funktionen einzubauen. Es ist jedoch recht einfach möglich,
              diese Themes für Xanthia zu konvertieren, da die Struktur den
              Encompass Themes sehr ähnlich ist.</para>
            </answer>
          </qandaentry>

          <qandaentry>
            <question>
              <para>Kann ich AutoTheme neben Xanthia betreiben?</para>
            </question>

            <answer>
              <para>Ja. Es treten keinerlei Probleme auf.</para>
            </answer>
          </qandaentry>
        </qandadiv>
      </qandaset>
    </section>

    <section id="Xanthia.User.XanthiaBlock">
      <title>Der "Xanthia/Display module in a block" Block<indexterm>
          <primary>Xanthia</primary>

          <secondary>Display Module in a Block</secondary>
        </indexterm><indexterm>
          <primary>Blöcke</primary>

          <secondary>Display Module in a Block</secondary>

          <see>Xanthia</see>
        </indexterm></title>

      <para>Im Xanthia-Grundpaket ist der Block "Display module in a block"
      enthalten. Mit diesem Block lässt sich die Ausgabe jeder "GUI function"
      eines API konformen Moduls ausgeben.</para>

      <para>Dies lässt sich am Beispiel des Moduls Pagesetter demonstrieren.
      Dazu nimmt man die Pagesetter URL
      <systemitem>index.php?module=<replaceable>pagesetter</replaceable>&amp;func=<replaceable>viewpub</replaceable>&amp;tid=<replaceable>7</replaceable>&amp;pid=<replaceable>24</replaceable></systemitem>
      und teit sie in ihre Komponenten auf.</para>

      <variablelist>
        <varlistentry>
          <term><systemitem>index.php</systemitem></term>

          <listitem>
            <para>Dies ist der Eingangspunkt. Alle API konformen Module
            benutzen index.php als Eingangspunkt. Für alle nicht API konformen
            Module (die modules.php als Eingangspunkt verwenden) kann der
            Block nicht verwendet werden.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><systemitem>module=<replaceable>pagesetter</replaceable></systemitem></term>

          <listitem>
            <para>Dies ist der Name des Moduls. Man wählt in im ersten Kasten
            der Blockkonfiguration aus.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><systemitem>func=<replaceable>viewpub</replaceable></systemitem></term>

          <listitem>
            <para>Dies ist der Name der Funktion und wird im zweiten Kasten
            der Blockkonfiguration eingegeben. Dabei reicht der Name der
            Funktion - im gewählten Beispiel ist dies viewpub</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><systemitem>tid=<replaceable>7</replaceable>&amp;pid=<replaceable>24</replaceable></systemitem></term>

          <listitem>
            <para>(der Rest) - dies sind die Argumente (arguments), die an die
            Funktion übergeben werden. Man gibt sie im dritten Kasten ein. Den
            Rest der URL übernimmt man bis auf das &amp;-Zeichen vollständig.
            Im vorliegenden Beispiel ist dies: tid=7&amp;pid=24.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <para>Wie gesagt, dieser Block funktioniert nur mit API konformen
      Modulen (also jenen, die über die index.php aufgerufen werden, z.B.
      <systemitem>index.php?module=<replaceable>modname</replaceable></systemitem>).
      Der Grund dafür ist, dass ältere Module den Header und Footer der Seite
      eigenständig ausgeben. Somit kann man bei diesen Modulen nicht an die
      reine Ausgabe der Module gelangen.</para>

      <para>In PostNuke .8 werden alle Module pnAPI konform sein. In Hinblick
      darauf wurde der vorliegende Block Xanthia bereits hinzugefügt.</para>
    </section>
  </section>

  <section>
    <title id="autotheme">Autothemes<indexterm>
        <primary>Themes</primary>

        <secondary>Autotheme</secondary>
      </indexterm><indexterm>
        <primary>Autotheme</primary>
      </indexterm></title>

    <para>TBD</para>
  </section>
</chapter>