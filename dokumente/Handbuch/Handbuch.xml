<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<book lang="de-DE" revision="$Revision$" status="draft">
  <!-- $Id$ -->

  <title>Das PostNuke Handbuch</title>

  <bookinfo>
    <copyright>
      <year>2004</year>

      <holder>PostNuke e.V.</holder>
    </copyright>

    <releaseinfo>$Revision$</releaseinfo>

    <date>$Date$</date>
  </bookinfo>

  <xi:include href="teil1.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />

  <xi:include href="teil2.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />

  <xi:include href="teil3.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />

  <xi:include href="teil4.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />

  <appendix>
    <title>Performance</title>

    <para>Neben einer guten Anbindung und einer schnellen Datenbank kann man
    die Performance von PostNuke mit ein paar kleinen Eingriffen weiter
    optimieren:</para>

    <variablelist>
      <varlistentry>
        <term>Optimierung der Konfiguration</term>

        <listitem>
          <itemizedlist>
            <listitem>
              <para>unnötige Module und Blöcke entfernen und ggfs. aus dem
              <filename>/html/modules/</filename> Verzeichnis löschen</para>
            </listitem>

            <listitem>
              <para>unnötige Autolinks-Einträge entfernen bzw. Autolinks
              komplett deaktivieren</para>
            </listitem>

            <listitem>
              <para>keine dynamischen Keywords generieren lassen</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Setzen weiterer Index-Felder (für PostNuke-Versionen ab
        .714)</term>

        <listitem>
          <para>Gerade für grössere Installationen sind die Indexfelder der
          PostNuke-Datenbank noch nicht optimal ausgeschöpft, durch hinzufügen
          einiger Indizes kann die Performance gesteigert
          werden:<programlisting>alter table <replaceable>nuke</replaceable>_comments add index idx_pid (pn_pid);
alter table <replaceable>nuke</replaceable>_comments add index idx_sid (pn_sid);
alter table <replaceable>nuke</replaceable>_group_membership add index idx_ug (pn_uid,pn_gid);
alter table <replaceable>nuke</replaceable>_message add index idx_exp (pn_active,pn_expire);
alter table <replaceable>nuke</replaceable>_modules add index idx_name (pn_name);
alter table <replaceable>nuke</replaceable>_poll_data add index idx_pollid (pn_pollid);
alter table <replaceable>nuke</replaceable>_pollcomments add index idx_pollid (pn_pollid);
alter table <replaceable>nuke</replaceable>_referer add index idx_url (pn_url);
alter table <replaceable>nuke</replaceable>_stats_date add index idx_date (pn_date);
alter table <replaceable>nuke</replaceable>_session_info add index idx_last (pn_lastused);
alter table <replaceable>nuke</replaceable>_stories add index idx_catid (pn_catid);
alter table <replaceable>nuke</replaceable>_stories add index idx_topic (pn_topic);
alter table <replaceable>nuke</replaceable>_user_data add index idx_uid (pn_uda_uid);
alter table <replaceable>nuke</replaceable>_userblocks add index idx_ub (pn_uid,pn_bid);
alter table <replaceable>nuke</replaceable>_users add index idx_uname (pn_uname);</programlisting>Ein
          regelmässiges optimieren der umfangreicheren Tabellen (z.B. mit
          PHPMyAdmin) hilft ebenfalls, die Query-Zeiten zu verbessern.<caution>
              <para>Vor allen Änderungen an der Datenbank sollte ein Dump
              angelegt werden!</para>
            </caution></para>
        </listitem>
      </varlistentry>
    </variablelist>
  </appendix>

  <appendix>
    <title>Was ist der safe_mode?</title>

    <para>Der safe_mode ist eine Möglichkeit, sich beim Shared Hosting vor
    Angriffen von anderen Kunden (nicht von außen!) zu schützen. Mehr
    Informationen dazu im PHP-Handbuch und in der PHP-FAQ . Der Dreh beim
    safe_mode ist der, das ein Skript nur auf Dateien zugreifen kann, die
    denselben Owner haben wie das Skript. Das Problem ist allerdings, dass
    durch das Skript angelegte Dateien und Verzeichnisse die Ownership des
    Web-Servers haben! Beispiel: Ein Verzeichnis foo ist per ftp angelegt und
    brav auf 777 chmod'ed. Der Owner ist der jeweilige ftp-Benutzer.</para>

    <procedure>
      <step>
        <title>Anlegen einer Datei</title>

        <para>Will ein Skript eine Datei in diesem Verzeichnis ablegen (z.B.
        nach einem Upload), so darf es das. Das Verzeichnis, in dem das
        passiert, ist foo mit der Ownership des FTP-Benutzers. Und das ist in
        aller Regel derjenige, der auch die Skripten hochgeladen hat. Die
        angelegte Datei hat jetzt die Ownership des Web-Servers!</para>
      </step>

      <step>
        <title>Anlegen eines Unterverzeichnisses</title>

        <para>Genau wie eben: Das geht. Und das Unterverzeichnis hat die
        Ownership des Web-Severs.</para>
      </step>

      <step>
        <title>Anlegen einer Datei in dieses Unterverzeichnis</title>

        <para>Das geht jetzt schief! Denn das Unterverzeichnis hat die
        Eigentümerschaft des Web-Servers, das Skript die des FTP-Benutzers.
        Und genau diese Zugriffe unterbindet der safe_mode.</para>
      </step>
    </procedure>

    <para>Gerade das dritte Beispiel ist aber genau das, was viele Skripte -
    insbesondere Galerien - machen. Sowohl die My_eGallery als auch die von
    Menalto benutzen für jede Galerie ein Unterverzeichnis. Daher können diese
    Skripte auf Webspace mit safe_mode nicht betrieben werden. Die Ausnahme
    bei den Galerien ist Photoshare. Sie kann problemlos mit dem safe_mode
    umgehen.</para>

    <bridgehead>Den safe_mode umgehen</bridgehead>

    <para>Auch, wenn der Provider safe_mode aktiviert hat, gibt es u.U. doch
    noch eine Möglichkeit, Uploads zu realisieren. Dazu benötigt man aber die
    Möglichkeit, eigene CGI-Programme zu starten. Diese Anleitung besiert auf
    der <ulink
    url="http://gallery.menalto.com/modules.php?op=modload&amp;name=GalleryDocs&amp;file=index&amp;page=gallery1-install.faq.b.php#gallery1-install.faq.b.3">FAQ
    der menalto-Gallerie</ulink>.</para>

    <itemizedlist>
      <listitem>
        <para>CGI-Version von PHP bekommen:</para>

        <orderedlist>
          <listitem>
            <para>Vorkompilierte Version besorgen - Einige kompilierte
            Versionen kann man auf der <ulink
            url="https://sourceforge.net/project/showfiles.php?group_id=7130&amp;package_id=86765">Gallery-Downloadseite</ulink>
            herunterladen.</para>
          </listitem>

          <listitem>
            <para>Selbst kompilieren - Es ist aber auch durchaus möglich, PHP
            selbst zu übersetzen und die dabei entstehende CGI-Version von PHP
            einzusetzen. Der Vorteil bei dieser Variante ist, dass man die
            eingesetzte PHP-Version sowie die benötigten Erweiterungen selbst
            bestimmen kann. Nachdem man die Sourcen von php.net geholt und
            ausgepackt hat, konfiguriert man die Installation mit</para>

            <para><command>./configure --enable-force-cgi-redirect
            --disable-safe-mode
            --with-config-file-path=/usr/local/lib/php-cgi</command></para>

            <para>Unbedingt den Parameter
            <command>--enable-force-cgi-redirect</command> mit angeben! Da PHP
            in unserem, für jeden Surfer zugänglichen cgi-bin-Verzeichnis
            liegen wird, wäre es anderenfalls möglich, dass jeder beliebige
            Skripte starten würde! Der Parameter
            <command>--with-config-file-path=/usr/local/lib/php-cgi</command>
            sorgt dafür, dass die angegebene <filename>php.ini</filename> nit
            anderen <filename>php.ini</filename>s kollidiert. Evtl. sollten
            noch weitere benötigte Erweiterungen mit angegeben werden. Nachdem
            das Paket auf diese Art konfiguriert wurde, startet der Befehl
            make den Übersetzer. Anschließend findet man das benötigte
            PHP-Programm in <filename>sapi/cgi</filename>. Evtl. sollte man
            noch mit <command>strip sapi/cgi/php</command> die
            debug-Informationen entfernen.</para>
          </listitem>
        </orderedlist>
      </listitem>

      <listitem>
        <para>PHP installieren - Hat man nun die benötigte PHP-Version, so
        lädt man sie auf seinen Webspace in das cgi-bin-Verzeichnis. Die
        Berechtigungen müssen auf 755 (d.h. lesen, ausführen für alle) gesetzt
        werden. In dasselbe Verzeichnis kommt die gewünschte php.ini. PHP
        benutzt dann diese statt der oben angegebenen (die wahrscheinlich
        ohnehin nicht existieren wird...)</para>
      </listitem>

      <listitem>
        <para>Apache anweisen, diese PHP-Version zu nutzen - Jetzt muss man
        noch dem Apache mitteilen, dass ab sofort diese PHP-Version zu
        benutzen ist. Das geschieht mit einer
        <filename>.htaccess</filename>-Datei im Stammverzeichnis der
        Webpräsenz mit dem folgenden Inhalt:<programlisting># Einen neuen MIME-Typ definieren 
AddType application/cgi-php .php 

# ...und mit dem Executable verknüpfen 
Action application/cgi-php /cgi-bin/php</programlisting></para>
      </listitem>
    </itemizedlist>
  </appendix>

  <appendix>
    <title>Statistiken zurücksetzen</title>

    <para>Um die Statistiken auf 0 zurückzusetzen, führt man folgendes Skript
    auf der Datenbank aus (z.B. mit phpMyAdmin)</para>

    <para>Dabei muß der Präfix <replaceable>nuke</replaceable> auf die eigenen
    Gegebenheiten angepaßt werden!</para>

    <programlisting>DROP TABLE IF EXISTS <replaceable>nuke</replaceable>_counter;

CREATE TABLE <replaceable>nuke</replaceable>_counter (
 pn_type varchar(80) NOT NULL default '',
 pn_var varchar(80) NOT NULL default '',
 pn_count int(11) unsigned NOT NULL default '0'
) TYPE=MyISAM;

INSERT INTO <replaceable>nuke</replaceable>_counter VALUES ('total', 'hits', 0);
INSERT INTO <replaceable>nuke</replaceable>_counter VALUES ('browser', 'Lynx', 0);
INSERT INTO <replaceable>nuke</replaceable>_counter VALUES ('browser', 'MSIE', 0);
INSERT INTO <replaceable>nuke</replaceable>_counter VALUES ('browser', 'Opera', 0);
INSERT INTO <replaceable>nuke</replaceable>_counter VALUES ('browser', 'Konqueror', 0);
INSERT INTO <replaceable>nuke</replaceable>_counter VALUES ('browser', 'Netscape', 0);
INSERT INTO <replaceable>nuke</replaceable>_counter VALUES ('browser', 'Bot', 0);
INSERT INTO <replaceable>nuke</replaceable>_counter VALUES ('browser', 'Other', 0);
INSERT INTO <replaceable>nuke</replaceable>_counter VALUES ('os', 'Windows', 0);
INSERT INTO <replaceable>nuke</replaceable>_counter VALUES ('os', 'Linux', 0);
INSERT INTO <replaceable>nuke</replaceable>_counter VALUES ('os', 'Mac', 0);
INSERT INTO <replaceable>nuke</replaceable>_counter VALUES ('os', 'FreeBSD', 0);
INSERT INTO <replaceable>nuke</replaceable>_counter VALUES ('os', 'SunOS', 0);
INSERT INTO <replaceable>nuke</replaceable>_counter VALUES ('os', 'IRIX', 0);
INSERT INTO <replaceable>nuke</replaceable>_counter VALUES ('os', 'BeOS', 0);
INSERT INTO <replaceable>nuke</replaceable>_counter VALUES ('os', 'OS/2', 0);
INSERT INTO <replaceable>nuke</replaceable>_counter VALUES ('os', 'AIX', 0);
INSERT INTO <replaceable>nuke</replaceable>_counter VALUES ('os', 'Other', 0);

# --------------------------------------------------------

DROP TABLE IF EXISTS <replaceable>nuke</replaceable>_stats_date;

CREATE TABLE <replaceable>nuke</replaceable>_stats_date (
 pn_date varchar(80) NOT NULL default '',
 pn_hits int(11) unsigned NOT NULL default '0'
) TYPE=MyISAM;

INSERT INTO <replaceable>nuke</replaceable>_stats_date VALUES ('15062003', 0);

# --------------------------------------------------------

DROP TABLE IF EXISTS <replaceable>nuke</replaceable>_stats_hour;

CREATE TABLE <replaceable>nuke</replaceable>_stats_hour (
 pn_hour tinyint(2) unsigned NOT NULL default '0',
 pn_hits int(11) unsigned NOT NULL default '0'
) TYPE=MyISAM;

INSERT INTO <replaceable>nuke</replaceable>_stats_hour VALUES (0, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_hour VALUES (1, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_hour VALUES (2, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_hour VALUES (3, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_hour VALUES (4, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_hour VALUES (5, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_hour VALUES (6, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_hour VALUES (7, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_hour VALUES (8, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_hour VALUES (9, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_hour VALUES (10, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_hour VALUES (11, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_hour VALUES (12, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_hour VALUES (13, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_hour VALUES (14, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_hour VALUES (15, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_hour VALUES (16, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_hour VALUES (17, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_hour VALUES (18, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_hour VALUES (19, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_hour VALUES (20, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_hour VALUES (21, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_hour VALUES (22, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_hour VALUES (23, 0);

# --------------------------------------------------------

DROP TABLE IF EXISTS <replaceable>nuke</replaceable>_stats_month;

CREATE TABLE <replaceable>nuke</replaceable>_stats_month (
 pn_month tinyint(2) unsigned NOT NULL default '0',
 pn_hits int(11) unsigned NOT NULL default '0'
) TYPE=MyISAM;

INSERT INTO <replaceable>nuke</replaceable>_stats_month VALUES (1, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_month VALUES (2, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_month VALUES (3, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_month VALUES (4, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_month VALUES (5, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_month VALUES (6, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_month VALUES (7, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_month VALUES (8, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_month VALUES (9, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_month VALUES (10, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_month VALUES (11, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_month VALUES (12, 0);

# --------------------------------------------------------

DROP TABLE IF EXISTS <replaceable>nuke</replaceable>_stats_week;

CREATE TABLE <replaceable>nuke</replaceable>_stats_week (
 pn_weekday tinyint(1) unsigned NOT NULL default '0',
 pn_hits int(11) unsigned NOT NULL default '0'
) TYPE=MyISAM;

INSERT INTO <replaceable>nuke</replaceable>_stats_week VALUES (0, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_week VALUES (1, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_week VALUES (2, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_week VALUES (3, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_week VALUES (4, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_week VALUES (5, 0);
INSERT INTO <replaceable>nuke</replaceable>_stats_week VALUES (6, 0);</programlisting>
  </appendix>
</book>