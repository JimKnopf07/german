<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<chapter id="Permissions" lang="de-DE" revision="$Revision$"
         status="draft">
  <!-- $Id$ -->

  <chapterinfo>
    <releaseinfo>$Revision$</releaseinfo>

    <date>$Date$</date>
  </chapterinfo>

  <title>Zugriffsrechte</title>

  <para>Vielen Benutzern erscheint das Rechtesystem auf den ersten Blick
  ziemlich kompliziert und verwirrend. Es ist nicht mehr so einfach zu
  administrieren wie in früheren Versionen, bietet aber umsomehr
  Möglichkeiten, wenn man es richtig einsetzt. Das Berechtigungssystem erlaubt
  Administratoren die Inhalte ihrer Seite zu schützen und den Zugang zu allen
  Bereich individuell einzustellen. Es unterscheidet neun unterschiedliche
  Stufen:</para>

  <itemizedlist>
    <listitem>
      <para>keines</para>
    </listitem>

    <listitem>
      <para>Übersicht</para>
    </listitem>

    <listitem>
      <para>lesen</para>
    </listitem>

    <listitem>
      <para>kommentieren</para>
    </listitem>

    <listitem>
      <para>moderieren</para>
    </listitem>

    <listitem>
      <para>editieren</para>
    </listitem>

    <listitem>
      <para>hinzufügen</para>
    </listitem>

    <listitem>
      <para>löschen</para>
    </listitem>

    <listitem>
      <para>administrieren</para>
    </listitem>
  </itemizedlist>

  <para>Die sich ergebenden Berechtigungen sind dabei modulspezifisch, d.h.
  der Modulautor entscheidet welche Berechtigung für eine bestimmte Aktion
  notwendig ist. Generell gilt aber, dass Berechtigungen kumulativ sind, d.h.
  alle niedriegeren Berechtigungen beinhalten ('kommentieren' schliesst also
  automatisch auch 'lesen' mit ein).</para>

  <para>Zuerst sollte man eine Gruppe erstellen, für die die Berechtigungen
  gelten sollen und dann die Mitglieder zuordnen. Dieser Gruppe kann man im
  folgenden dann die gewünschten Berechtigungen zuweisen.</para>

  <para>Ein Beispiel: Erstellung einer Gruppe 'Subadmin', die News
  administrieren kann, Schritt für Schritt erklärt: Zuerst die Gruppe
  'Subadmin' anlegen und gewünschte Benutzer zuordnen. Dann unter
  Zugriffsrechte auf neues Gruppenrecht klicken.</para>

  <itemizedlist>
    <listitem>
      <para>Gruppe -&gt; Subadmin</para>
    </listitem>

    <listitem>
      <para>Komponente -&gt; Stories::Story</para>
    </listitem>

    <listitem>
      <para>Instanz -&gt; .*</para>
    </listitem>

    <listitem>
      <para>Zugriffsrecht -&gt; administrieren</para>
    </listitem>
  </itemizedlist>

  <para>(eine Liste der vorhandenen Komponenten wird übrigens bei Klick auf
  den Titel in einem Pop-Up-Fenster eingeblendet) Man beachte: diese
  Einstellung räumt der Gruppe Adminberechtigung für das Modul Stories ein!
  Jetzt muss man noch sicherstellen, dass die Reihenfolge der Berechtigungen
  korrekt ist. Zugriffsberechtigungen werden linear von oben nach unten in der
  Liste angewendet - Rogue nimmt die erste passende Berechtigung und wendet
  diese an - wenn also eine Zeile Adminberechtigung einräumt kann dies nicht
  durch spätere Zeile eingeschränkt werden! In den meisten Fällen ist die
  oberste Berechtigung:</para>

  <itemizedlist>
    <listitem>
      <para>Admins | .* | .* | administrieren</para>
    </listitem>
  </itemizedlist>

  <para>(also dürfen alle Benutzer in der Gruppe Admin alles) Die neu
  eingerichtet Subadmin-Gruppe sollte also UNTER diese Berechtigung gestellt
  werden, damit keine spätere Zeile eventuelle Einschränkungen
  vornimmt.</para>

  <para>Beispiel:</para>

  <itemizedlist>
    <listitem>
      <para>Subadmin|Stories::|.*|administrieren</para>
    </listitem>

    <listitem>
      <para>Users|.*|.*|kommentieren</para>
    </listitem>
  </itemizedlist>

  <para>erlaubt Mitglieder der Subadmin-Gruppe die Administration des
  Story-Bereiches - wenn man nun die beiden Zeilen in der Reihenfolge
  umstellt, macht die Berechtigung schon keinen Sinn mehr, da die Subadmins
  als Mitglieder der Gruppe 'Users' nur das Kommentarrecht eingeräumt
  bekommen. Durch den Einsatz der 'Instanz' in den Berechtigungen kann man die
  Einstellungen sehr detailliert einrichten - folgende Beispiele sollen dies
  verdeutlichen: Der Link zur 'Administration' im Hauptmenü soll nur für
  Administratoren angezeigt werden.</para>

  <itemizedlist>
    <listitem>
      <para>alle Gruppen|Menublock::|Hauptmenü:Administration:|keines</para>
    </listitem>
  </itemizedlist>

  <para>Dabei ist wichtig, dass das Hauptmenü auch tatsächlich 'Hauptmenü'
  heisst und dass diese Zugriffsberechtigung direkt UNTER denen der
  Admingruppen steht (in der default-Installation ist das eigentlich schon
  eingetragen - und zwar für das Main Menu) Wenn nun mehrer Links 'gesperrt'
  werden sollen, ist die Angabe wie folgt:</para>

  <itemizedlist>
    <listitem>
      <para>alle
      Gruppen|Menublock::|Hauptmenü:(Administration|Link1|Link2):|keines</para>
    </listitem>
  </itemizedlist>

  <para>(das | (Pipe-) Zeichen fungiert als Trenner der einzelnen mit Klammern
  umschlossenen Einträge) Sehr häufig wird gefragt, wie man anonymen Benutzern
  die Teilnahme an Umfragen bzw. das Kommentieren von Beiträgen ermöglichen
  kann:</para>

  <itemizedlist>
    <listitem>
      <para>unregistrierte Gruppen|Polls::|.*|kommentieren</para>
    </listitem>

    <listitem>
      <para>unregistrierte Gruppen|Stories::Story|.*|kommentieren</para>
    </listitem>
  </itemizedlist>

  <para>Diese Zeilen müssen natürlich ÜBER die normalerweise letzte Zeile in
  der die allgemeinen Rechte für anonyme Benutzer auf lesen gesetzt werden.
  Achtung: Ein fehlerhaft konfiguriertes Berechtigungssystem kann dazu führen,
  dass z.B. anonyme Benutzer auf der Postnuke-Site Inhalte aktualisieren,
  hinzufügen oder sogar löschen können! Wenn man allerdings sorgfältig vorgeht
  und die bereits bestehenden Berechtigungen (und auch ihre Reihenfolge in der
  Liste) nicht ändert, sollte das allerdings nicht passieren... Wenn man sich
  trotz aller Warnungen einmal selber ausgesperrt hat, kann das PostNuke Swiss
  Army Knife Tool die Berechtigungen wieder auf den Standard
  zurücksetzen.</para>

  <para><tip>
      <para>User oder Gruppenrechte?</para>

      <para>Eines vorweg: die Rechte sind in beiden fällen die Gleichen.
      Einziger Unterschied besteht in der Rangfolge der Rechte: Userrechte
      überschreiben immer Gruppenrechte.</para>

      <para>Gruppen-Rechte sollten generell festgelegt werden. Gruppenrechte
      beziehen sich auf alle Mitglieder einer Gruppe wohingegen Benutzerrechte
      sich auf einen speziellen Benutzer beziehen. Sie regeln eigentlich den
      grundsätzlichen Zugang zur Seite! Die User-Rechte legen die
      Freiheitsgrade des einzelnen Users fest.</para>

      <para>Normalerweise sollten Gruppenrechte eingesetzt werden und nur in
      Ausnahmefällen sollten Benutzerrechte zusätzlich gesetzt werden, damit
      ein spezieller Benutzer zusätzliche Rechte über seine Gruppenrechte
      hinaus erhält.</para>

      <para>Die Festlegung der einzelnen Userrechte geht weiter und ist im
      Grunde detaillierter (insofern sie eben einen User betrifft und nicht
      eine Gruppe aus mehreren Usern)</para>

      <para>Deshalb sollten die User-Rechte auch erst nach den Gruppenrechten
      festgelegt werden; Sie bestimmen die Möglichkeiten, wenn ein bestimmter
      User etwas machen können sollte, was mit dem Rechtsstatus seiner
      aktuellen Gruppenzugehörigkeit nicht möglich ist.</para>

      <para>Man sollte mit den Gruppenrechten zuerst arbeiten und später dann
      die User-Rechte zur Feinabstimmung hinzuziehen!</para>
    </tip></para>

  <section>
    <title>Hauptmenü</title>

    <para>Ein gutes Beispiel für die Anwendung des PostNuke
    Berechtigunssystems liefert das Hauptmenü. Als kurze Vorbemerkung sollte
    erwähnt werden, daß ".*" einen regulären Ausdruck darstellt. Damit mag der
    eine oder andere nichts anfangen, aber mal kurz: der . beschreibt ein
    beliebiges Zeichen, der * steht für eine beliebige Wiederholung (auch
    keine) Nehmen wir einmal an, wir hätten einen Menü-Block mit dem Namen
    "Hauptmenü" und den Punkten "Home", "mein Account", "Mitglied werden",
    "Administration" und "Logout". Nun sollen alle Benutzer "Home" sehen, alle
    registrierten Benutzer zusätzlich "mein Account" und "Logout", alle
    Administratoren "Administration" und alle Gäste "Mitglied werden". Nun ist
    zunächst der Bereich anzugeben. Das ist unproblematisch, denn derzeit gibt
    es nur die Option "Alle Bereiche". Als nächstes ist die jeweilige Gruppe
    zu bestimmen. Zunächst die Admins, dann die User und zum Schluß die Gäste.
    Warum? weil das System dem Prinzip "First Match" folgt, daß heißt also,
    die erste positive Übereinstimmung die Suche beendet. Es ist also immer
    darauf zu achten, daß die komplexen oder sehr speziellen Einschränkungen
    zuerst erfolgen. Für den Admin wählt man dann die Komponente (in diesem
    Fall immer "Menublock::"). Die Instanz setzt sich bei Menüblöcken aus dem
    Titel und dem Menüpunkt zusammen. Hier soll nun "Mitglied werden" verboten
    werden, alles andere ist für den Admin erlaubt:<programlisting>Gruppe: Admins
Komponente: Menublock::
Instanz: Hauptmenü:Mitglied werden:
Recht: keines

Gruppe: Admins
Komponente: .*
Instanz: .*
Recht: administrieren

Gruppe: alle Gruppen
Komponente: Menublock::
Instanz: Hauptmenü:Administration:
Recht: keines</programlisting>Es folgen die Benutzerrechte:<programlisting>Gruppe: Users
Komponente: Menublock::
Instanz: Hauptmenü:(mein Account|Logout):
Recht: kommentieren

Gruppe: Users
Komponente: Menublock::
Instanz: Hauptmenü:Mitglied werden:
Recht: keines

Gruppe: Users
Komponente: .*
Instanz: .*
Recht: kommentieren</programlisting>Somit ist dann das Menü so aufgebaut, dass
    es je nach Userstatus entsprechend angezeigt wird. Zusammenfassend: Die
    Gruppenrechte werden nacheinander ausgewertet. Der erste Treffer zählt,
    alles weitere wird ignoriert. Die Komponente ist vorgegeben, z.B.
    Menublock:: oder Onlineblock::. Die Instanz besteht aus zwei Teilen, deren
    Bedeutung von der jeweiligen Komponente abhängt. Die einzelnen Teile sind
    durch den Doppelpunkt voneinander getrennt. Der Ausdruck, der ausgewertet
    wird, ist ein regulärer Ausdruck: Beispiele: ^Haupt* = Alles was mit
    "Haupt" beginnt, also Hauptmenü, Hauptauswahl, Hauptmann. (x|y|z) = x oder
    y oder z als Ganzes .* = alles</para>
  </section>

  <section>
    <title>Stories</title>

    <para>Ab der Version .722 ist das Permission System ein wenig gefixt
    worden - unter anderem kann jetzt die Komponente 'Stories::Story'
    zumindestens weitestgehend korrekt eingesetzt werden. Bei den
    Zugriffsrechten kann man sich durch einen Klick auf 'Komponente' bzw.
    'Instanz' alle im System hinterlegten Berechtigungsschemata anzeigen. Für
    den Bereich 'News' ist in erster Linie 'Stories::Story' interessant
    ('Stories::Category' wird lediglich für die Administration der Kategorien
    benötigt). Beispiele: <command>Stories::Story /// Author ID:Category
    name:Story ID</command></para>

    <itemizedlist>
      <listitem>
        <para>wenn man nun den Zugriff auf eine bestimmte Kategorie für
        unregistrierte Benutzer verhindern will, sollte folgende Berechtigung
        vor dem allgemeinen Leserecht (unregistrierte | .* | .* | lesen)
        gesetzt werden:</para>

        <para><command>unregistrierte | Stories::Story | :Kategoriename: |
        keines</command></para>
      </listitem>

      <listitem>
        <para>wenn man der Gruppe 'Autoren' ermöglichen will, neue Beiträge in
        der Kategorie 'Info' zu schreiben, sollte folgende Berechtigung nach
        der allgemeinen Adminzeile (Admins | .* | .* | administrieren) gesetzt
        werden:</para>

        <para><command>Autoren | Stories::Story | :Info: |
        hinzufügen</command></para>

        <para>bzw.</para>

        <para><command>Autoren | Stories::Story | :Info: |
        löschen</command></para>

        <para>wenn sie die Artikel dieser Kategorie auch löschen sollen
        dürfen.</para>
      </listitem>

      <listitem>
        <para>wenn es das entsprechende Theme unterstützt kann man
        darüberhinaus beispielsweise unregistrierten Benutzern lediglich das
        'Übersicht' Recht einräumen und ihnen nur den Hometext anzeigen</para>
      </listitem>

      <listitem>
        <para>zum direkten Aufruf des entsprechenden Adminbereiches kann man
        das MainMenu um einen Link zu admin.php?module=NS-AddStory&amp;op=main
        erweitern, der nur der entsprechenden Gruppe angezeigt wird.</para>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>Topics</title>

    <para>Ab der Version .722 ist das Permission System ein wenig gefixt
    worden - unter anderem kann jetzt die Komponente 'Topics::Topic'
    zumindestens weitestgehend korrekt eingesetzt werden. Bei den
    Zugriffsrechten kann man sich durch einen Klick auf 'Komponente' bzw.
    'Instanz' alle im System hinterlegten Berechtigungsschemata anzeigen. Für
    den Bereich 'Topics' ist in erster Linie 'Topics::Topic' interessant
    ('Topics::Related' wird lediglich für die Administration der Topics
    genauer gesagt die verwandten Links, benötigt). Beispiele:
    <command>Topics::Topic /// Topic name::Topic ID</command></para>

    <itemizedlist>
      <listitem>
        <para>wenn man nun den Zugriff auf ein bestimmtes Topic für
        unregistrierte Benutzer verhindern will, sollte folgende Berechtigung
        vor dem allgemeinen Leserecht (unregistrierte | .* | .* | lesen)
        gesetzt werden: <command>unregistrierte | Topics::Topic | Topic_Name::
        | keines</command><caution>
            <para>Der Topicname ist nicht zu verwechseln mit dem Topictext -
            am besten in der Topicadministration nachschauen!</para>
          </caution></para>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>Statistik</title>

    <para>Ab der Version .722 ist das Permission System ein wenig gefixt
    worden - unter anderem kann jetzt die Komponente 'Stats::' zumindestens
    weitestgehend korrekt eingesetzt werden. Bei den Zugriffsrechten kann man
    sich durch einen Klick auf 'Komponente' bzw. 'Instanz' alle im System
    hinterlegten Berechtigungsschemata anzeigen. Für das Modul Statistik gilt
    die Komponente 'Stats::' Beispiel:</para>

    <para><command>Stats:: /// ::</command> wenn man z.B. den Zugriff auf die
    Statistik für unregistrierte Benutzer verhindern möchte, ein (wichtig!)
    Benutzerrecht</para>

    <para><command>unregistrierte | Stats:: | .* | keines</command> anlegen.
    Es muss ein Benutzerrecht gewählt werden, da das allgemeine Leserecht bei
    den Gruppen (unregistrierte | .* | .* | lesen) ansonsten nicht überlagert
    werden kann.</para>
  </section>

  <section>
    <title>Mitgliederliste</title>

    <para>Ab der Version .722 ist das Permission System ein wenig gefixt
    worden - unter anderem kann jetzt die Komponente 'Members_List::'
    zumindestens weitestgehend korrekt eingesetzt werden. Bei den
    Zugriffsrechten kann man sich durch einen Klick auf 'Komponente' bzw.
    'Instanz' alle im System hinterlegten Berechtigungsschemata anzeigen. Für
    das Modul Mitgliederliste gilt die Komponente 'Members_List::' Beispiel:
    <command>Members_List:: /// ::</command> wenn man z.B. den Zugriff auf die
    Statistik für unregistrierte Benutzer verhindern möchte, ein (wichtig!)
    Benutzerrecht <command>unregistrierte | Members_List:: | .* |
    keines</command> anlegen. Es muss ein Benutzerrecht gewählt werden, da das
    allgemeine Leserecht bei den Gruppen (unregistrierte | .* | .* | lesen)
    ansonsten nicht überlagert werden kann.</para>
  </section>

  <section>
    <title>Umfragen</title>

    <para>Standardmäßig sind die Polls für die unregistrierten User nicht
    zugänglich - wer das ändern will, muß die Polls entsprechend
    freigeben:</para>

    <para><command>Polls:: .* kommentieren</command></para>

    <para>Man darf natürlich nicht vergessen unter Administration &gt;
    Kommentare einzustellen, daß anonyme User nicht kommentieren dürfen, sonst
    kann der böswillige Besucher damit natürlich Schabernack treiben.</para>
  </section>

  <section>
    <title>phpBB_14</title>

    <para>Die folgenden Beispiele beziehen sich auf das phpBB_14 Modul für
    PostNuke das mit Integration in das Permission Management vorliegt, sie
    können aber auch auf alle anderen in das Rogue Permission-System
    eingebundenen Module übertragen werden. Bei den Zugriffsberechtigungen im
    Administrationsbereich kann man durch einen Klick auf "Komponente" bzw.
    "Instanz" eine Auflistung aller im System angelegten Berechtigungsschemata
    anzeigen. Für das phpBB-Modul stehen folgende Berechtigungen zur
    Verfügung:</para>

    <para><command>Komponente: phpBB_14::Category Instanz: Category name::
    Komponente: phpBB_14::Forum Instanz: Forum name::</command></para>

    <para>dies bedeutet, dass der Zugriff sowohl über die Kategorie, als auch
    über das Forum definiert werden kann.</para>

    <para>Beispiele: Normalerweise haben unregistrierte Benutzer in Rogue ein
    allgemeines Leserecht (in aller Regel als letzte Zeile in den
    Berechtigungen definiert):</para>

    <para><command>unregistrierte Gruppen | .* | .* | lesen</command> damit
    eine bestimmte Kategorie nun anonymen Benutzer nicht angezeigt wird, muss
    dieses Leserecht eingeschränkt werden:</para>

    <para><command>unregistrierte Gruppen | phpBB_14::Category |
    Name_Kategorie:: | keines</command></para>

    <para>damit nur ein bestimmtes Forum anonymen Benutzer nicht angezeigt
    wird, sieht die Berechtigungsvariante wie folgt aus:</para>

    <para><command>unregistrierte Gruppen | phpBB_14::Forum | Name_Forum:: |
    keines</command> damit diese Berechtigungen auch angewendet werden, müssen
    sie natürlich VOR das allgemeine Leserecht gesetzt werden. Damit
    unregistrierte Benutzer in einem Forum/einer Kategorie posten können, muss
    das Leserecht dagegen erweitert werden: generell für alle Foren:</para>

    <para><command>unregistrierte Gruppen | phpBB_14::Category | .* |
    kommentieren</command></para>

    <para>oder auf Grundlage von Forum bzw. Kategorie:</para>

    <para><command>unregistrierte Gruppen | phpBB_14::Forum | Name_Forum:: |
    kommentieren unregistrierte Gruppen | phpBB_14::Category |
    Name_Kategorie:: | kommentieren</command></para>

    <para>Um nun auch Moderatoren zu bestimmen, sehen die Rechte wie folgt
    aus:</para>

    <para><command>phpBB-Moderatoren | phpBB_14::Forum | Name_Forum:: |
    moderieren phpBB-Moderatoren | phpBB_14::Category | Name_Kategorie:: |
    moderieren</command> (wobei "phpBB-Moderatoren" sowohl für eine Gruppe als
    auch für Einzelbenutzer stehen kann)</para>
  </section>
</chapter>