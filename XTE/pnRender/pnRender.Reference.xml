<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE appendix PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<appendix id="pnrender.tempdev.plugins.reference" lang="en-US"
          revision="$Revision$ $Date$"
          status="draft">
  <!-- $Id$ -->

  <appendixinfo>
    <authorgroup>
      <othercredit>
        <lineage>This reference was compiled from the information contained in
        the plugins.</lineage>
      </othercredit>
    </authorgroup>

    <releaseinfo>$Revision$</releaseinfo>

    <date>$Date$</date>

    <keywordset>
      <keyword>Smarty</keyword>

      <keyword>pnRender</keyword>

      <keyword>Xanthia</keyword>

      <keyword>plugin</keyword>
    </keywordset>
  </appendixinfo>

  <title>Plugins Reference</title>

  <para>This Sections lists all available plugins</para>

  <remark>Please note: This list is not current at the moment</remark>

  <section id="pnrender.plugins.functions">
    <title>pnRender Functions</title>

    <refentry id="pnrender.plugins.function.pager">
      <refmeta>
        <refentrytitle>pager</refentrytitle>
      </refmeta>

      <refnamediv>
        <refname>pager</refname>

        <refpurpose>Smarty function to display a pager</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Description</title>

        <para>...</para>
      </refsect1>

      <refsect1>
        <title>Available parameters</title>

        <itemizedlist>
          <listitem>
            <para><replaceable>...</replaceable>...</para>
          </listitem>
        </itemizedlist>
      </refsect1>

      <refsect1>
        <title>Example</title>

        <example>
          <title>pager</title>

          <programlisting format="linespecific">&lt;!--[ ??? ]--&gt;</programlisting>
        </example>
      </refsect1>

      <refsect1>
        <title>Information</title>

        <itemizedlist>
          <listitem>
            <para>author: ....</para>
          </listitem>

          <listitem>
            <para>since: ...</para>
          </listitem>
        </itemizedlist>
      </refsect1>
    </refentry>

    <refentry id="pnrender.plugins.function.pagerabc">
      <refmeta>
        <refentrytitle>pagerabc</refentrytitle>
      </refmeta>

      <refnamediv>
        <refname>pager</refname>

        <refpurpose>Smarty function to display a pager</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Description</title>

        <para>...</para>
      </refsect1>

      <refsect1>
        <title>Available parameters</title>

        <itemizedlist>
          <listitem>
            <para><replaceable>...</replaceable>...</para>
          </listitem>
        </itemizedlist>
      </refsect1>

      <refsect1>
        <title>Example</title>

        <example>
          <title>pagerabc</title>

          <programlisting format="linespecific">&lt;!--[ ??? ]--&gt;</programlisting>
        </example>
      </refsect1>

      <refsect1>
        <title>Information</title>

        <itemizedlist>
          <listitem>
            <para>author: ....</para>
          </listitem>

          <listitem>
            <para>since: ...</para>
          </listitem>
        </itemizedlist>
      </refsect1>
    </refentry>

    <refentry id="pnrender.plugins.function.pnblock">
      <refmeta>
        <refentrytitle>pnblock</refentrytitle>
      </refmeta>

      <refnamediv>
        <refname>pnblock</refname>

        <refpurpose>Smarty function to display an existing PostNuke
        block.</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Description</title>

        <para>The block is choosen either by id or by title. Remember, title
        is not unique.</para>

        <para>The block state is ignored, so even deactivated blocks can be
        shown.</para>

        <para>The block specific parameters can be overwritten, considering
        they are known.</para>
      </refsect1>

      <refsect1>
        <title>Available parameters:</title>

        <itemizedlist>
          <listitem>
            <para><replaceable>id</replaceable> id of block to be
            displayed</para>
          </listitem>

          <listitem>
            <para><replaceable>name</replaceable> title of block to be
            displayed</para>
          </listitem>

          <listitem>
            <para><replaceable>title</replaceable> Overwrites block
            title</para>
          </listitem>

          <listitem>
            <para><replaceable>position</replaceable> Overwrites position
            (l,c,r)</para>
          </listitem>

          <listitem>
            <para><replaceable>themed</replaceable> displays block
            themed</para>
          </listitem>
        </itemizedlist>
      </refsect1>

      <refsect1>
        <title>Example</title>

        <example>
          <title>pnblock</title>

          <programlisting format="linespecific">&lt;!--[ ??? ]--&gt;</programlisting>
        </example>
      </refsect1>

      <refsect1>
        <title>Information</title>

        <itemizedlist>
          <listitem>
            <para>author: Andreas Stratmann</para>
          </listitem>

          <listitem>
            <para>since: 03/05/23</para>
          </listitem>
        </itemizedlist>
      </refsect1>
    </refentry>

    <refentry id="pnrender.plugins.function.pnconfiggetvar">
      <refmeta>
        <refentrytitle>pnconfiggetvar</refentrytitle>
      </refmeta>

      <refnamediv>
        <refname>pnconfiggetvar</refname>

        <refpurpose>Smarty function to get configuration variable</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Description</title>

        <para>This function obtains a configuration variable from the PostNuke
        system.</para>

        <para>Note that the results should be handled by the
        pnvarprepfordisplay or the pnvarprephtmldisplay modifier before being
        displayed.</para>
      </refsect1>

      <refsect1>
        <title>Available parameters</title>

        <itemizedlist>
          <listitem>
            <para><replaceable>name</replaceable> The name of the config
            variable to obtain</para>
          </listitem>
        </itemizedlist>
      </refsect1>

      <refsect1>
        <title>Example</title>

        <example>
          <title>pnconfiggetvar</title>

          <programlisting format="linespecific">Welcome to &lt;!--[pnconfiggetvar name="sitename"|pnvarprephtmldisplay]--&gt;!</programlisting>
        </example>
      </refsect1>

      <refsect1>
        <title>Information</title>

        <itemizedlist>
          <listitem>
            <para>author - Andreas Stratmann</para>
          </listitem>

          <listitem>
            <para>since - 03/05/19</para>
          </listitem>
        </itemizedlist>
      </refsect1>
    </refentry>

    <refentry id="pnrender.plugins.function.pngetbaseurl">
      <refmeta>
        <refentrytitle>pngetbaseurl</refentrytitle>
      </refmeta>

      <refnamediv>
        <refname>pngetbaseurl</refname>

        <refpurpose>Smarty function to obtain base URL for this
        site</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Description</title>

        <para>This function obtains the base URL for the site. The base url is
        defined as the full URL for the site minus any file information i.e.
        everything before the 'index.php' from your start page. Unlike the API
        function pnGetBaseURL, the results of this function are already
        sanitized to display, so it should not be passed to the
        pnvarprepfordisplay modifier.</para>
      </refsect1>

      <refsect1>
        <title>Available parameters</title>

        <itemizedlist>
          <listitem>
            <para>none</para>
          </listitem>
        </itemizedlist>
      </refsect1>

      <refsect1>
        <title>Example</title>

        <example>
          <title>pager</title>

          <programlisting format="linespecific">&lt;!--[pngetbaseurl]--&gt;</programlisting>
        </example>
      </refsect1>

      <refsect1>
        <title>Information</title>

        <itemizedlist>
          <listitem>
            <para>author - Mark West</para>
          </listitem>

          <listitem>
            <para>since - 08/08/2003</para>
          </listitem>
        </itemizedlist>
      </refsect1>
    </refentry>

    <refentry id="pnrender.plugins.function.pngetstatusmsg">
      <refmeta>
        <refentrytitle>pngetstatusmsg</refentrytitle>
      </refmeta>

      <refnamediv>
        <refname>pngetstatusmsg</refname>

        <refpurpose>Smarty function to obtain status message</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Description</title>

        <para>This function obtains the last status message posted for this
        session. The status message exists in one of two session variables:
        'statusmsg' for a status message, or 'errormsg' for an error message.
        If both a status and an error message exists then the error message is
        returned.</para>

        <para>This function obtains the last status message posted for this
        session. The status message exists in one of two session variables:
        'statusmsg' for a status message, or 'errormsg' for an error message.
        If both a status and an error message exists then the error message is
        returned.</para>

        <para>This is is a destructive function - it deletes the two session
        variables 'statusmsg' and 'erorrmsg' during its operation.</para>

        <para>Note that you must not cache the outputs from this function, as
        its results change aech time it is called. The PostNuke developers are
        looking for ways to automise this.</para>
      </refsect1>

      <refsect1>
        <title>Available parameters</title>

        <itemizedlist>
          <listitem>
            <para>none</para>
          </listitem>
        </itemizedlist>
      </refsect1>

      <refsect1>
        <title>Example</title>

        <example>
          <title>pngetstatusmsg</title>

          <programlisting format="linespecific">&lt;!--[pngetstatusmsg|pnvarprephtmldisplay]--&gt;</programlisting>
        </example>
      </refsect1>

      <refsect1>
        <title>Information</title>

        <itemizedlist>
          <listitem>
            <para>author - Jörg Napp</para>
          </listitem>

          <listitem>
            <para>since - 16. Sept. 2003</para>
          </listitem>

          <listitem>
            <para>todo - prevent this function from being cached (Smarty
            2.6.0)</para>
          </listitem>
        </itemizedlist>
      </refsect1>
    </refentry>

    <refentry id="pnrender.plugins.function.pnimg">
      <refmeta>
        <refentrytitle>pnimg</refentrytitle>
      </refmeta>

      <refnamediv>
        <refname>pnimg</refname>

        <refpurpose>Smarty function to include an image</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Description</title>

        <para>This function provides an easy way to include an image. The
        function will return the full source path to the image. It will as
        well provite the width and height attributes if none are set.</para>
      </refsect1>

      <refsect1>
        <title>Available parameters</title>

        <itemizedlist>
          <listitem>
            <para><replaceable>src</replaceable> The file name of the
            image</para>
          </listitem>

          <listitem>
            <para><replaceable>modname</replaceable> The well-known name of a
            module (default: the current module)</para>
          </listitem>

          <listitem>
            <para><replaceable>name</replaceable> Name of the language
            constant to return</para>
          </listitem>

          <listitem>
            <para><replaceable>width</replaceable>,
            <replaceable>height</replaceable> If set, they will be passed. If
            none is set, they are obtained from the image</para>
          </listitem>

          <listitem>
            <para><replaceable>alt</replaceable> If not set, an empty string
            is being assigned</para>
          </listitem>

          <listitem>
            <para>all remaining parameters are passed to the image tag</para>
          </listitem>
        </itemizedlist>
      </refsect1>

      <refsect1>
        <title>Example</title>

        <example>
          <title>pnimg</title>

          <programlisting>&lt;!--[pnimg src="heading.gif" ]--&gt;</programlisting>

          <para>will become</para>

          <programlisting>&lt;img src="modules/Example/pnimages/eng/heading.gif" alt="" width="261" height="69" /&gt;</programlisting>

          <programlisting>&lt;!--[pnimg src="heading.gif" width="100" border="1" alt="foobar" ]--&gt;</programlisting>

          <para>will become</para>

          <programlisting>&lt;img src="modules/Example/pnimages/eng/heading.gif" width="100" border="1" alt="foobar" /&gt;</programlisting>
        </example>
      </refsect1>

      <refsect1>
        <title>Information</title>

        <itemizedlist>
          <listitem>
            <para>author - Jörg Napp</para>
          </listitem>

          <listitem>
            <para>since - 06. Oct. 2003</para>
          </listitem>
        </itemizedlist>
      </refsect1>
    </refentry>

    <refentry id="pnrender.plugins.function.pnml">
      <refmeta>
        <refentrytitle>pnml</refentrytitle>
      </refmeta>

      <refnamediv>
        <refname>pnml</refname>

        <refpurpose>Smarty function to read a PostNuke language
        constant.</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Description</title>

        <para>This function takes a identifier and returns the corresponding
        language constant.</para>
      </refsect1>

      <refsect1>
        <title>Available parameters</title>

        <itemizedlist>
          <listitem>
            <para><replaceable>name</replaceable> Name of the language
            constant to return</para>
          </listitem>
        </itemizedlist>
      </refsect1>

      <refsect1>
        <title>Example</title>

        <example>
          <title>pnml</title>

          <programlisting format="linespecific">&lt;!--[pnml name="_EXAMPLESTRING"]--&gt;</programlisting>
        </example>
      </refsect1>

      <refsect1>
        <title>Information</title>

        <itemizedlist>
          <listitem>
            <para>author - Mark West</para>
          </listitem>

          <listitem>
            <para>since - 08/08/2003</para>
          </listitem>
        </itemizedlist>
      </refsect1>
    </refentry>

    <refentry id="pnrender.plugins.function.pnmodapifunc">
      <refmeta>
        <refentrytitle>pnmodapifunc</refentrytitle>
      </refmeta>

      <refnamediv>
        <refname>pnmodapifunc</refname>

        <refpurpose>Smarty function to to execute a module API
        function</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Description</title>

        <para>This function calls a calls a specific module API function. It
        returns whatever the return value of the resultant function is if it
        succeeds. Note that in contrast to the API function pnModAPIFunc you
        need not to load the module API with pnModAPILoad.</para>
      </refsect1>

      <refsect1>
        <title>Available parameters</title>

        <itemizedlist>
          <listitem>
            <para><replaceable>modname</replaceable> The well-known name of a
            module to execute a function from (required)</para>
          </listitem>

          <listitem>
            <para><replaceable>type</replaceable> The type of function to
            execute; currently one of 'user' or 'admin' (default is
            'user')</para>
          </listitem>

          <listitem>
            <para><replaceable>func</replaceable> The name of the module
            function to execute (default is 'main')</para>
          </listitem>

          <listitem>
            <para>all remaining parameters are passed to the module API
            function</para>
          </listitem>
        </itemizedlist>
      </refsect1>

      <refsect1>
        <title>Example</title>

        <example>
          <title>pnmodapifunc</title>

          <programlisting format="linespecific">&lt;!--[pnmodfunc module="News" type="user" func="getarticles" id="3"]--&gt;</programlisting>
        </example>
      </refsect1>

      <refsect1>
        <title>Information</title>

        <itemizedlist>
          <listitem>
            <para>author - Andreas Stratmann</para>
          </listitem>

          <listitem>
            <para>author - Jörg Napp</para>
          </listitem>

          <listitem>
            <para>since - 03/05/23</para>
          </listitem>

          <listitem>
            <para>see - <xref
            linkend="pnrender.plugins.function.pnmodfunc" /></para>
          </listitem>
        </itemizedlist>
      </refsect1>
    </refentry>

    <refentry id="pnrender.plugins.function.pnmodfunc">
      <refmeta>
        <refentrytitle>pnmodfunc</refentrytitle>
      </refmeta>

      <refnamediv>
        <refname>pnmodfunc</refname>

        <refpurpose>Smarty function to to execute a module
        function</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Description</title>

        <para>This function calls a specific module function. It returns
        whatever the return value of the resultant function is if it succeeds.
        Note that in contrast to the API function pnModFunc you need not to
        load the module with pnModLoad.</para>
      </refsect1>

      <refsect1>
        <title>Available parameters</title>

        <itemizedlist>
          <listitem>
            <para><replaceable>modname</replaceable> The well-known name of a
            module to execute a function from (required)</para>
          </listitem>

          <listitem>
            <para><replaceable>type</replaceable> The type of function to
            execute; currently one of 'user' or 'admin' (default is
            'user')</para>
          </listitem>

          <listitem>
            <para><replaceable>func</replaceable> The name of the module
            function to execute (default is 'main')</para>
          </listitem>

          <listitem>
            <para>all remaining parameters are passed to the module
            function</para>
          </listitem>
        </itemizedlist>
      </refsect1>

      <refsect1>
        <title>Example</title>

        <example>
          <title>pnmodfunc</title>

          <programlisting format="linespecific">&lt;!--[pnmodfunc modname="News" type="user" func="display"]--&gt;</programlisting>
        </example>
      </refsect1>

      <refsect1>
        <title>Information</title>

        <itemizedlist>
          <listitem>
            <para>author - Andreas Stratmann</para>
          </listitem>

          <listitem>
            <para>author - Jörg Napp</para>
          </listitem>

          <listitem>
            <para>since - 03/05/23</para>
          </listitem>

          <listitem>
            <para>see - <xref
            linkend="pnrender.plugins.function.pnmodapifunc" /></para>
          </listitem>
        </itemizedlist>
      </refsect1>
    </refentry>

    <refentry id="pnrender.plugins.function.pnmodgetvar">
      <refmeta>
        <refentrytitle>pnmodgetvar</refentrytitle>
      </refmeta>

      <refnamediv>
        <refname>pnmodgetvar</refname>

        <refpurpose>Smarty function to get module variable</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Description</title>

        <para>This function obtains a module-specific variable from the
        PostNuke system.</para>

        <para>Note that the results should be handled by the
        pnvarprepfordisplay of the pnvarprephtmldisplay modifiers before being
        displayed.</para>
      </refsect1>

      <refsect1>
        <title>Available parameters</title>

        <itemizedlist>
          <listitem>
            <para><replaceable>module</replaceable> The well-known name of a
            module from which to obtain the variable</para>
          </listitem>

          <listitem>
            <para><replaceable>name</replaceable> The name of the module
            variable to obtain</para>
          </listitem>
        </itemizedlist>
      </refsect1>

      <refsect1>
        <title>Example</title>

        <example>
          <title>pnmodgetvar</title>

          <programlisting format="linespecific">&lt;!--[pnmodgetvar module="Example" name="foobar"|pnvarprepfordisplay]--&gt;</programlisting>
        </example>
      </refsect1>

      <refsect1>
        <title>Information</title>

        <itemizedlist>
          <listitem>
            <para>author - Andreas Stratmann</para>
          </listitem>

          <listitem>
            <para>since - 03/05/19</para>
          </listitem>
        </itemizedlist>
      </refsect1>
    </refentry>

    <refentry id="pnrender.plugins.function.pnmodurl">
      <refmeta>
        <refentrytitle>pnmodurl</refentrytitle>
      </refmeta>

      <refnamediv>
        <refname>pnmodurl</refname>

        <refpurpose>Smarty function to create a PostNuke-compatible URL for a
        specific module function.</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Description</title>

        <para>This function returns a module URL string if successful. Unlike
        the API function pnModURL, this is already sanitized to display, so it
        should not be passed to the pnvarprepfordisplay modifier.</para>
      </refsect1>

      <refsect1>
        <title>Available parameters</title>

        <itemizedlist>
          <listitem>
            <para><replaceable>modname</replaceable> The well-known name of a
            module for which to create the URL (required)</para>
          </listitem>

          <listitem>
            <para><replaceable>type</replaceable> The type of function for
            which to create the URL; currently one of 'user' or 'admin'
            (default is 'user')</para>
          </listitem>

          <listitem>
            <para><replaceable>func</replaceable> The actual module function
            for which to create the URL (default is 'main')</para>
          </listitem>

          <listitem>
            <para>all remaining parameters are passed to the module
            function</para>
          </listitem>
        </itemizedlist>
      </refsect1>

      <refsect1>
        <title>Example</title>

        <example>
          <title>pnmodurl</title>

          <para>Create a URL to the News 'view' function with parameters 'sid'
          set to 3 and 'index' set to '0'</para>

          <programlisting format="linespecific">&lt;a href="&lt;!--[pnmodurl modname="News" type="user" func="view" sid="3" index="0"]--&gt;"&gt;Link&lt;/a&gt;</programlisting>
        </example>
      </refsect1>

      <refsect1>
        <title>Information</title>

        <itemizedlist>
          <listitem>
            <para>author - Mark West</para>
          </listitem>

          <listitem>
            <para>since - 08/08/2003</para>
          </listitem>
        </itemizedlist>
      </refsect1>
    </refentry>

    <refentry id="pnrender.plugins.function.pnsecgenauthkey">
      <refmeta>
        <refentrytitle>pnsecgenauthkey</refentrytitle>
      </refmeta>

      <refnamediv>
        <refname>pnsecgenauthkey</refname>

        <refpurpose>Smarty function to generate a unique key to secure forms
        content as unique.</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Description</title>

        <para>As the MGD states, all operations protected by
        pnSecAuthAction(). Ih the form, you generate a hidden field with the
        authid in your form, and check the authid in the submission. T.this
        way you can be sure that the data was given in your form (and not
        given by any POST/GET data from outside)</para>

        <remark>Note that you must not cache the outputs from this function,
        as its results change aech time it is called. The PostNuke developers
        are looking for ways to automise this.</remark>
      </refsect1>

      <refsect1>
        <title>Available parameters</title>

        <itemizedlist>
          <listitem>
            <para><replaceable>module</replaceable> The well-known name of a
            module to execute a function from (required)</para>
          </listitem>
        </itemizedlist>
      </refsect1>

      <refsect1>
        <title>Example</title>

        <example>
          <title>pnsecgenauthkey</title>

          <programlisting format="linespecific">&lt;input type="hidden" name="authid" value="&lt;!--[pnsecgenauthkey module="MyModule"]--&gt;"&gt;</programlisting>
        </example>
      </refsect1>

      <refsect1>
        <title>Information</title>

        <itemizedlist>
          <listitem>
            <para>author - Mark West</para>
          </listitem>

          <listitem>
            <para>since - 08/08/2003</para>
          </listitem>

          <listitem>
            <para>todo - prevent this function from being cached (Smarty
            2.6.0)</para>
          </listitem>
        </itemizedlist>
      </refsect1>
    </refentry>

    <refentry id="pnrender.plugins.function.pnthemegetvar">
      <refmeta>
        <refentrytitle>pnthemegetvar</refentrytitle>
      </refmeta>

      <refnamediv>
        <refname>pnthemegetvar</refname>

        <refpurpose>Smarty function to get a colour definition from the
        theme</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Description</title>

        <para>This function returns the corresponding color define from the
        theme</para>
      </refsect1>

      <refsect1>
        <title>Available parameters</title>

        <itemizedlist>
          <listitem>
            <para><replaceable>name</replaceable> Name of the colour
            definition</para>
          </listitem>
        </itemizedlist>
      </refsect1>

      <refsect1>
        <title>Example</title>

        <example>
          <title>pnthemegetvar</title>

          <programlisting format="linespecific">&lt;!--[pnthemegetvar name="bgcolor2"]--&gt;</programlisting>
        </example>
      </refsect1>

      <refsect1>
        <title>Information</title>

        <itemizedlist>
          <listitem>
            <para>author - Jörg Napp</para>
          </listitem>

          <listitem>
            <para>since - 16. Sept. 2003</para>
          </listitem>

          <listitem>
            <para>todo - check to work with Xanthia themes</para>
          </listitem>
        </itemizedlist>
      </refsect1>
    </refentry>
  </section>

  <section id="pnrender.plugins.modifiers">
    <title>pnRender modifiers</title>

    <refentry id="pnrender.plugins.modifier.pnmodcallhooks">
      <refmeta>
        <refentrytitle>pnmodcallhooks</refentrytitle>
      </refmeta>

      <refnamediv>
        <refname>pnmodcallhooks</refname>

        <refpurpose>Smarty modifier to apply transform hooks</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Description</title>

        <para>This modifier will run the transform hooks that are enabled for
        the corresponding module (like Autolinks, bbclick and others).</para>
      </refsect1>

      <refsect1>
        <title>Example</title>

        <example>
          <title>pnmodcallhooks</title>

          <programlisting format="linespecific">&lt;!--[$MyVar|pnmodcallhooks]--&gt;</programlisting>
        </example>
      </refsect1>

      <refsect1>
        <title>Information</title>

        <itemizedlist>
          <listitem>
            <para>author - Joerg Napp</para>
          </listitem>

          <listitem>
            <para>author - The pnCommerce team</para>
          </listitem>

          <listitem>
            <para>since - 16. Sept. 2003</para>
          </listitem>
        </itemizedlist>
      </refsect1>
    </refentry>

    <refentry id="pnrender.plugins.modifier.pnvarcensor">
      <refmeta>
        <refentrytitle>pnvarcensor</refentrytitle>
      </refmeta>

      <refnamediv>
        <refname>pnvarcensor</refname>

        <refpurpose>Smarty modifier to remove censored words</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Description</title>

        <para>This modifier examines the contents of the passed variable for
        words which are deemed offensive or otherwise not allowed to be
        displayed. These words are replaced with asterix marks to show that
        words have been removed.</para>

        <para>This modifier tries to be intelligent in its attempt to remove
        censored words whilst not censoring words on the censor list that
        happen to be embedded in a larger word.</para>

        <para>This modifier uses the information provided in the configuration
        setting 'CensorList' as the basis of the words that it censors. It
        also looks for commonly derivations of the words used to try to avoid
        censoring. The system is also case-insensitive.</para>

        <para>Care should be taken to consider the effect of censorship, and
        if it should be applied to all information that is passed in by the
        user or if it should only be used in specific cases.</para>

        <remark>This modifier is to be removed in future versions, as
        pnVarCensor is being moved to be a transform hook.</remark>
      </refsect1>

      <refsect1>
        <title>Example</title>

        <example>
          <title>pnmodcallhooks</title>

          <programlisting format="linespecific">&lt;!--[$MyVar|pnvarcensor]--&gt;</programlisting>
        </example>
      </refsect1>

      <refsect1>
        <title>Information</title>

        <itemizedlist>
          <listitem>
            <para>author - Joerg Napp</para>
          </listitem>

          <listitem>
            <para>since - 16. Sept. 2003</para>
          </listitem>
        </itemizedlist>
      </refsect1>
    </refentry>

    <refentry id="pnrender.plugins.modifier.pnvarprepfordisplay">
      <refmeta>
        <refentrytitle>pnvarprepfordisplay</refentrytitle>
      </refmeta>

      <refnamediv>
        <refname>pnvarprepfordisplay</refname>

        <refpurpose>Smarty modifier to prepare a variable for
        display</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Description</title>

        <para>This modifier carries out suitable escaping of characters such
        that when output as part of an HTML page the exact string is
        displayed.</para>

        <para>Running this modifier multiple times is cumulative and is not
        reversible. It recommended that variables that have been returned from
        this modifier are only used to display the results, and then
        discarded.</para>
      </refsect1>

      <refsect1>
        <title>Example</title>

        <example>
          <title>pnvarprepfordisplay</title>

          <programlisting format="linespecific">&lt;!--[$MyVar|pnvarprepfordisplay]--&gt;</programlisting>
        </example>
      </refsect1>

      <refsect1>
        <title>Information</title>

        <itemizedlist>
          <listitem>
            <para>author - The pnCommerce team</para>
          </listitem>

          <listitem>
            <para>since - 16. Sept. 2003</para>
          </listitem>

          <listitem>
            <para>see - <xref
            linkend="pnrender.plugins.modifier.pnvarprephtmldisplay" /></para>
          </listitem>
        </itemizedlist>
      </refsect1>
    </refentry>

    <refentry id="pnrender.plugins.modifier.pnvarprepforstore">
      <refmeta>
        <refentrytitle>pnvarprepforstore</refentrytitle>
      </refmeta>

      <refnamediv>
        <refname>pnvarprepforstore</refname>

        <refpurpose>Smarty modifier to prepare variable for database
        storage</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Description</title>

        <para>This modifier carries out suitable escaping of characters such
        that when inserted into a database the exact string is stored.</para>
      </refsect1>

      <refsect1>
        <title>Example</title>

        <example>
          <title>pnvarprepforstore</title>

          <programlisting format="linespecific">&lt;!--[$MyVar|pnvarprepforstore]--&gt;</programlisting>
        </example>
      </refsect1>

      <refsect1>
        <title>Information</title>

        <itemizedlist>
          <listitem>
            <para>author - ....</para>
          </listitem>

          <listitem>
            <para>since - ...</para>
          </listitem>
        </itemizedlist>
      </refsect1>
    </refentry>

    <refentry id="pnrender.plugins.modifier.pnvarprephtmldisplay">
      <refmeta>
        <refentrytitle>pnvarprephtmldisplay</refentrytitle>
      </refmeta>

      <refnamediv>
        <refname>pnvarprephtmldisplay</refname>

        <refpurpose>Smarty modifier to prepare variable for display,
        preserving some HTML tags</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Description</title>

        <para>This modifier carries out suitable escaping of characters such
        that when output as part of an HTML page the exact string is
        displayed, except for a number of admin-defined HTML tags which are
        left as-is for display purposes.</para>

        <para>This modifier should be used with great care, as it does allow
        certain HTML tags to be displayed.</para>

        <para>The HTML tags that will be displayed are those defined in the
        configuration variable AllowableHTML , which is set on a per-instance
        basis by the site administrator.</para>

        <para>Running this modifier multiple times is cumulative and is not
        reversible. It recommended that variables that have been returned from
        this modifier are only used to display the results, and then
        discarded.</para>
      </refsect1>

      <refsect1>
        <title>Example</title>

        <example>
          <title>pnvarprephtmldisplay</title>

          <programlisting format="linespecific">&lt;!--[$MyVar|pnvarprephtmldisplay]--&gt;</programlisting>
        </example>
      </refsect1>

      <refsect1>
        <title>Information</title>

        <itemizedlist>
          <listitem>
            <para>author - The pnCommerce team</para>
          </listitem>

          <listitem>
            <para>since - 16. Sept. 2003</para>
          </listitem>

          <listitem>
            <para>see - <xref
            linkend="pnrender.plugins.modifier.pnvarprepfordisplay" /></para>
          </listitem>
        </itemizedlist>
      </refsect1>
    </refentry>
  </section>
</appendix>